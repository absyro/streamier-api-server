var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.756,1,1.894]],["body/modules/AppModule.html",[0,1.241,1,3.784,2,1.266,3,1.396,4,1.906,5,1.906,6,1.543,7,1.906,8,1.543,9,2.829,10,2.829,11,3.123,12,0.039,13,3.123,14,3.123,15,2.803,16,3.123,17,2.488,18,1.906,19,1.906,20,0.424,21,0.365,22,0.365,23,3.428,24,2.488,25,1.034,26,0.944,27,3.428,28,2.829,29,3.428,30,3.428,31,3.428,32,2.829,33,3.428,34,3.428,35,3.428,36,3.428,37,3.428,38,3.428,39,3.428,40,0.424,41,0.256,42,0.028,43,0.028]],["title/modules/CommonModule.html",[0,0.756,11,1.686]],["body/modules/CommonModule.html",[0,1.334,2,1.477,3,1.629,4,2.223,5,2.223,6,1.8,7,2.975,8,2.408,11,3.293,12,0.037,17,2.743,18,2.223,19,2.223,20,0.494,21,0.426,22,0.426,25,0.891,26,1.102,40,0.494,41,0.299,42,0.03,43,0.03,44,3.3,45,3.3,46,3.3,47,2.758,48,3.998,49,3.505,50,3.998]],["title/injectables/CommonService.html",[47,1.365,51,1.365]],["body/injectables/CommonService.html",[12,0.038,20,0.432,21,0.373,22,0.373,25,0.961,26,0.964,40,0.432,41,0.261,42,0.028,43,0.028,47,2.04,51,2.04,52,2.185,53,2.887,54,0.872,55,2.04,56,2.036,57,2.509,58,4.533,59,1.745,60,3.498,61,5.647,62,1.674,63,3.498,64,2.04,65,1.674,66,1.13,67,2.04,68,4.533,69,3.916,70,3.498,71,1.425,72,2.04,73,1.945,74,1.745,75,2.185,76,2.185,77,2.485,78,1.574,79,2.04,80,4.533,81,3.498,82,2.485,83,2.04,84,3.498,85,2.04,86,4.533,87,2.887,88,1.745,89,3.498,90,3.498,91,2.887,92,3.498,93,2.485,94,3.498]],["title/modules/ConfigModule.html",[0,0.756,13,1.686]],["body/modules/ConfigModule.html",[0,1.206,2,1.431,8,1.744,12,0.038,13,2.933,20,0.479,21,0.413,22,0.413,24,2.154,25,0.998,26,1.067,40,0.479,41,0.289,42,0.03,43,0.03,95,3.874,96,4.837,97,3.198,98,3.993,99,1.933,100,3.874,101,3.874,102,3.874,103,3.874,104,2.752,105,3.874,106,2.752,107,5.524,108,2.752,109,2.752,110,3.874,111,2.752,112,3.198,113,2.752,114,2.752,115,2.752,116,2.154,117,3.021,118,2.752,119,2.752,120,3.874,121,2.752,122,3.874,123,2.752,124,3.874,125,2.154,126,3.874,127,2.154,128,3.874]],["title/classes/CreateHandlerDto.html",[41,0.227,129,1.513]],["body/classes/CreateHandlerDto.html",[12,0.037,20,0.323,21,0.279,22,0.279,25,0.672,40,0.323,41,0.278,42,0.023,43,0.023,54,0.652,56,2.12,62,1.742,65,1.84,66,1.175,74,2.486,83,2.122,112,3.071,129,1.856,130,1.454,131,4.113,132,1.858,133,1.674,134,3.574,135,3.574,136,3.574,137,2.011,138,2.622,139,3.892,140,1.824,141,3.892,142,3.071,143,3.401,144,3.071,145,4.572,146,3.071,147,3.868,148,2.615,149,2.615,150,3.72,151,3.401,152,3.679,153,2.643,154,3.071,155,3.892,156,2.643,157,3.071,158,4.494,159,4.494,160,3.071,161,2.353,162,3.892,163,3.071,164,3.071,165,2.615,166,2.615,167,3.071,168,3.72,169,3.72,170,3.071,171,2.615,172,2.615,173,3.071,174,2.643,175,3.72,176,3.72,177,3.071,178,2.615,179,2.615,180,4.113,181,1.454,182,1.634,183,2.622,184,2.615,185,2.615,186,2.615,187,2.615]],["title/modules/DatabaseModule.html",[0,0.756,14,1.686]],["body/modules/DatabaseModule.html",[0,1.239,2,1.494,8,1.821,12,0.038,14,2.763,20,0.5,21,0.431,22,0.431,24,2.25,25,0.898,26,1.115,40,0.5,41,0.302,42,0.031,43,0.031,66,1.008,116,2.25,125,2.25,127,2.25,183,2.25,188,4.045,189,4.102,190,2.527,191,4.045,192,4.045,193,4.045,194,4.045,195,4.045,196,4.045,197,4.045,198,4.045,199,4.045,200,4.045,201,4.045,202,4.045,203,4.045,204,4.045,205,4.045,206,4.045,207,4.045]],["title/interfaces/Environment.html",[99,1.513,208,1.365]],["body/interfaces/Environment.html",[12,0.039,20,0.399,21,0.344,22,0.344,40,0.399,42,0.026,43,0.026,49,2.292,54,0.804,66,1.427,99,2.412,104,3.663,106,3.663,108,3.663,109,3.663,111,3.663,113,3.434,114,3.434,115,3.434,116,2.688,117,3.449,118,3.434,119,3.434,121,3.663,123,3.663,125,2.688,127,2.867,133,1.935,137,2.196,208,1.935,209,2.015,210,2.292,211,3.449,212,3.434,213,2.663,214,2.292,215,2.663,216,2.015,217,2.015]],["title/entities/Handler.html",[140,1.016,218,2.154]],["body/entities/Handler.html",[12,0.038,20,0.198,21,0.171,22,0.171,25,0.464,40,0.198,41,0.12,42,0.016,43,0.016,54,0.4,56,2.167,62,1.827,65,2.238,66,1.321,76,1.002,78,2.105,83,2.227,91,3.031,133,1.156,134,2.651,135,2.651,136,2.651,137,2.02,138,2.751,139,4.084,140,1.848,141,2.12,142,2.12,143,3.495,144,2.12,145,4.373,146,3.031,151,3.309,152,2.609,153,1.825,155,3.031,156,1.825,157,2.12,158,3.982,159,3.861,160,2.12,161,1.832,162,3.031,163,2.12,164,3.031,167,2.12,170,3.031,173,2.12,174,1.825,177,3.031,180,4.172,181,0.892,183,2.383,218,1.825,219,1.324,220,1.324,221,2.006,222,2.651,223,4.823,224,2.651,225,1.786,226,1.825,227,2.12,228,2.12,229,2.12,230,2.568,231,3.672,232,2.568,233,2.12,234,3.031,235,1.604,236,3.316,237,3.672,238,1.825,239,3.672,240,3.672,241,2.568,242,3.672,243,2.568,244,3.672,245,1.604,246,1.604,247,3.212,248,1.604,249,2.12,250,2.12,251,3.861,252,1.604,253,1.604,254,1.604,255,3.212,256,1.604,257,1.604,258,1.604,259,1.604,260,3.212,261,1.604,262,1.825,263,1.324,264,2.568,265,2.12,266,2.568,267,1.604,268,2.568,269,2.568,270,1.604,271,2.568,272,1.604,273,2.568,274,3.672,275,1.604,276,1.825,277,2.568,278,2.568,279,1.604,280,2.568,281,4.948,282,2.568,283,1.002,284,4.501,285,2.568,286,1.604,287,1.604,288,1.604,289,1.604,290,1.604,291,0.8]],["title/interfaces/HandlerSocketData.html",[208,1.365,292,1.894]],["body/interfaces/HandlerSocketData.html",[12,0.036,20,0.551,21,0.474,22,0.474,40,0.551,42,0.032,43,0.032,54,1.11,66,1.11,83,2.607,133,2.37,137,2.07,208,2.004,209,2.782,292,3.289,293,3.676,294,2.476,295,3.676]],["title/controllers/HandlersController.html",[296,1.686,297,1.894]],["body/controllers/HandlersController.html",[12,0.038,20,0.142,21,0.122,22,0.122,25,0.82,26,0.316,40,0.142,41,0.145,42,0.012,43,0.012,47,1.142,54,0.286,55,0.876,56,1.913,57,2.557,59,0.572,62,1.344,64,1.638,65,1.95,66,1.227,67,1.507,69,3.982,71,1.483,72,2.093,73,0.638,74,0.572,78,1.142,79,2.042,82,3.717,83,2.569,85,1.507,88,2.124,116,1.083,129,1.937,137,1.627,138,2.024,140,1.961,143,3.122,147,3.131,151,3.395,152,0.815,153,1.383,161,0.972,181,0.638,182,0.716,183,1.862,221,1.585,225,2.024,226,3.598,227,2.468,228,0.947,229,0.947,234,0.947,238,1.383,250,3.005,262,0.815,263,0.947,272,1.868,276,3.223,283,3.076,291,2.038,294,0.638,296,0.638,297,1.216,298,0.638,299,0.947,300,0.947,301,1.147,302,2.094,303,1.607,304,2.99,305,2.094,306,2.094,307,2.757,308,1.147,309,0.947,310,3.005,311,1.147,312,3.637,313,3.637,314,1.147,315,3.839,316,1.147,317,1.147,318,1.147,319,2.99,320,1.147,321,4.084,322,1.607,323,3.005,324,3.64,325,4.257,326,1.947,327,1.147,328,1.147,329,1.147,330,3.005,331,1.947,332,1.947,333,1.607,334,1.947,335,1.147,336,1.147,337,0.947,338,1.947,339,1.607,340,2.094,341,1.947,342,1.947,343,3.64,344,1.947,345,1.947,346,1.607,347,0.947,348,1.607,349,1.147,350,1.147,351,1.147,352,1.147,353,1.147,354,0.947,355,1.607,356,2.094,357,2.092,358,1.947,359,1.147,360,1.147,361,1.147,362,2.271,363,1.607,364,2.094,365,1.147,366,1.147,367,2.468,368,1.147,369,1.147,370,1.383,371,0.947,372,1.383,373,0.947,374,2.764,375,2.764,376,1.607,377,1.607,378,3.005,379,1.947,380,2.468,381,2.764,382,3.204,383,2.468,384,0.947,385,1.607,386,2.094,387,0.947,388,0.947,389,0.947,390,1.383,391,0.947,392,0.815,393,1.142,394,0.947,395,1.142,396,0.815,397,1.607,398,1.147,399,0.947,400,1.147,401,1.585,402,0.947,403,0.947,404,1.147,405,1.147,406,2.764,407,2.468,408,2.092,409,1.147,410,1.147,411,1.147,412,1.147,413,0.638,414,0.947,415,0.815,416,0.947,417,0.947,418,1.147,419,0.947,420,1.147,421,1.147,422,1.585,423,1.147,424,2.537,425,2.537,426,1.147,427,0.947,428,1.147,429,1.147,430,1.147,431,1.147,432,1.147]],["title/classes/HandlersGateway.html",[41,0.227,393,1.365]],["body/classes/HandlersGateway.html",[12,0.039,20,0.377,21,0.325,22,0.325,25,0.952,40,0.377,41,0.309,42,0.026,43,0.026,54,0.761,55,1.864,56,2.088,57,2.346,59,1.523,62,1.736,64,1.864,65,1.53,66,1.257,67,1.864,71,1.244,72,1.864,74,1.523,77,2.169,78,1.374,79,2.116,85,2.116,88,2.067,130,1.698,133,1.864,138,1.698,140,1.388,182,1.907,214,2.169,221,2.587,283,1.907,292,1.907,294,3.091,393,1.864,395,2.446,396,2.169,413,3.022,415,2.169,419,2.52,433,2.52,434,4.142,435,4.701,436,4.701,437,3.053,438,3.053,439,4.701,440,3.053,441,3.053,442,3.053,443,3.053,444,2.169,445,4.142,446,2.52,447,3.053,448,3.053,449,2.169,450,3.053,451,4.701,452,3.053,453,3.053,454,3.053,455,3.053,456,3.053,457,3.053,458,3.053,459,3.053,460,2.52]],["title/modules/HandlersModule.html",[0,0.756,15,1.513]],["body/modules/HandlersModule.html",[0,1.292,2,1.376,3,1.518,4,2.072,5,2.072,6,1.677,7,2.881,8,2.332,12,0.038,15,2.91,17,2.625,18,2.072,19,2.072,20,0.461,21,0.397,22,0.397,24,2.072,25,1.038,26,1.027,40,0.461,41,0.278,42,0.029,43,0.029,140,1.249,189,3.076,190,2.327,297,3.236,298,2.625,392,2.647,393,2.125,394,3.076,395,2.732,396,2.647,461,3.076,462,3.076,463,3.076,464,3.726,465,3.726,466,3.726]],["title/injectables/HandlersService.html",[51,1.365,395,1.365]],["body/injectables/HandlersService.html",[12,0.039,20,0.241,21,0.207,22,0.207,25,0.875,26,0.536,40,0.241,41,0.145,42,0.018,43,0.018,51,1.345,52,1.216,54,0.485,55,1.345,56,2.161,57,2.895,59,1.491,62,1.845,64,2.249,65,1.845,66,1.246,67,2.249,71,1.972,72,2.488,76,1.216,78,0.876,79,2.093,83,2.355,85,2.093,87,1.606,88,2.198,129,2.416,137,2.161,140,1.219,190,1.216,211,1.216,221,3.121,225,2.586,233,1.606,251,1.606,265,1.606,272,1.216,283,1.216,291,1.816,302,3.004,303,2.467,305,2.467,337,2.467,362,2.779,370,1.383,389,1.606,390,2.124,391,1.606,392,1.383,395,1.345,401,1.216,408,1.867,417,2.467,422,1.216,427,1.606,460,1.606,467,1.606,468,2.989,469,3.639,470,3.639,471,3.639,472,1.946,473,4.083,474,1.946,475,2.989,476,1.946,477,1.946,478,2.989,479,1.946,480,2.989,481,1.946,482,1.946,483,1.946,484,1.946,485,1.946,486,1.946,487,1.946,488,1.946,489,2.467,490,1.946,491,2.467,492,1.946,493,2.989,494,1.946,495,3.639,496,1.946,497,1.946,498,1.946,499,2.989,500,1.946,501,1.946,502,1.946,503,1.946,504,1.946,505,1.946,506,1.946,507,1.946,508,1.946,509,1.946,510,1.946,511,1.946,512,1.946,513,1.606,514,1.606,515,2.989,516,1.946,517,2.989,518,2.989,519,1.946,520,1.946]],["title/interfaces/ProcessEnv.html",[208,1.365,216,1.894]],["body/interfaces/ProcessEnv.html",[12,0.038,20,0.502,21,0.432,22,0.432,40,0.502,42,0.031,43,0.031,49,2.883,99,2.484,104,2.883,106,2.883,108,2.883,109,2.883,111,2.883,113,2.883,114,2.883,115,2.883,116,2.256,117,3.109,118,2.883,119,2.883,121,2.883,123,2.883,125,2.256,127,2.256,137,2.074,208,2.241,209,2.534,210,2.883,211,3.109,212,2.883,213,3.349,214,2.883,215,3.349,216,3.109,217,2.534]],["title/controllers/StreamsController.html",[296,1.686,521,1.894]],["body/controllers/StreamsController.html",[12,0.038,20,0.162,21,0.14,22,0.14,25,0.704,26,0.361,40,0.162,41,0.098,42,0.013,43,0.013,47,1.258,54,0.327,55,0.98,56,1.828,57,2.423,59,0.654,62,1.202,64,1.626,65,1.972,66,0.811,67,1.465,69,3.976,71,1.326,72,1.946,73,0.729,74,0.654,75,0.819,78,0.98,79,1.465,82,1.547,83,2.403,85,1.465,88,1.624,137,2.005,138,1.81,140,1.909,143,3.304,147,0.931,151,3.496,161,1.945,181,0.729,183,0.729,222,1.798,224,1.798,225,2.404,226,1.547,238,1.547,262,1.547,272,1.745,276,3.072,291,2.158,296,0.729,298,0.729,300,1.082,307,2.769,309,1.082,310,3.409,312,1.082,313,1.082,315,3.569,322,1.798,323,1.798,330,1.798,339,2.307,340,2.982,347,1.082,348,1.798,354,1.082,355,1.798,356,1.798,357,2.58,363,1.798,364,2.307,367,2.687,371,1.082,372,1.547,373,1.082,374,2.982,375,2.982,376,1.798,377,1.798,378,1.798,380,2.982,381,2.687,382,2.982,383,3.569,384,1.082,385,1.798,388,1.082,397,1.798,399,1.082,401,1.36,402,1.798,403,3.569,406,2.687,407,2.687,408,2.033,422,2.033,449,1.547,521,1.36,522,1.082,523,1.311,524,2.307,525,2.307,526,2.307,527,2.307,528,1.311,529,4.215,530,5.996,531,3.897,532,1.311,533,4.324,534,3.569,535,2.178,536,1.311,537,2.794,538,4.488,539,1.311,540,1.311,541,1.985,542,1.082,543,4.215,544,2.794,545,2.794,546,1.311,547,3.897,548,2.794,549,4.488,550,1.311,551,1.311,552,1.082,553,1.798,554,2.178,555,1.311,556,1.311,557,1.082,558,2.687,559,1.311,560,1.311,561,3.612,562,1.394,563,1.082,564,1.311,565,1.311,566,3.255,567,3.255,568,2.178,569,2.794,570,3.255,571,1.311,572,1.311,573,2.794,574,1.311,575,1.311,576,1.311,577,1.311,578,1.311,579,1.311,580,1.311]],["title/modules/StreamsModule.html",[0,0.756,16,1.686]],["body/modules/StreamsModule.html",[0,1.283,2,1.358,3,1.497,4,2.044,5,2.044,6,1.655,7,2.863,8,2.317,12,0.038,15,2.901,16,3.304,17,2.602,18,2.044,19,2.044,20,0.454,21,0.392,22,0.392,24,2.602,25,1.011,26,1.013,32,3.034,40,0.454,41,0.275,42,0.029,43,0.029,298,2.602,393,2.106,521,3.216,562,3.024,563,3.034,581,3.034,582,3.034,583,3.034,584,3.676,585,3.676,586,3.034,587,3.676]],["title/injectables/StreamsService.html",[51,1.365,562,1.513]],["body/injectables/StreamsService.html",[12,0.039,20,0.263,21,0.226,22,0.226,25,0.694,26,0.585,40,0.263,41,0.159,42,0.02,43,0.02,51,1.438,52,1.327,54,0.53,55,1.438,56,2.077,57,2.83,59,1.06,62,1.777,64,2.246,65,1.777,66,1.244,67,2.165,71,1.865,72,2.409,74,1.06,75,1.327,77,1.509,78,0.956,79,1.728,85,2.246,88,1.06,137,2.26,161,1.06,225,3.177,291,1.594,294,1.776,307,1.509,346,3.78,357,1.327,370,1.509,393,2.165,401,2.398,408,1.327,413,1.181,414,1.754,415,1.509,416,1.754,422,1.327,449,3.034,489,1.754,514,1.754,524,3.169,525,3.169,526,3.169,527,3.169,529,4.487,541,3.732,542,1.754,543,4.546,552,1.754,557,1.754,558,3.525,562,1.594,586,1.754,588,1.754,589,3.839,590,2.124,591,2.124,592,2.124,593,3.839,594,2.124,595,3.195,596,2.124,597,2.124,598,2.124,599,2.124,600,2.124,601,2.124,602,2.124,603,4.27,604,2.124,605,2.124,606,2.124,607,2.124,608,2.124,609,2.124,610,2.124,611,2.124,612,2.124,613,2.124,614,2.124,615,2.124,616,3.195,617,2.124,618,3.195,619,2.124,620,1.754,621,2.124,622,2.124]],["title/classes/UpdateHandlerDto.html",[41,0.227,362,1.686]],["body/classes/UpdateHandlerDto.html",[12,0.037,20,0.547,21,0.471,22,0.471,25,0.948,40,0.547,41,0.331,42,0.032,43,0.032,129,2.208,130,2.46,132,3.144,161,2.208,217,3.276,362,2.917,390,3.144,623,3.652,624,5.245,625,4.425,626,3.652,627,3.652]],["title/classes/WsAdapter.html",[41,0.227,628,2.154]],["body/classes/WsAdapter.html",[12,0.038,20,0.456,21,0.393,22,0.393,25,0.847,40,0.456,41,0.275,42,0.029,43,0.029,54,0.919,55,2.32,56,1.904,62,1.361,64,1.659,65,1.361,66,1.169,67,1.659,71,1.501,79,1.659,85,1.659,127,2.607,130,2.05,211,3.22,217,2.928,372,2.619,413,3.184,444,3.331,628,3.331,629,3.043,630,5.155,631,5.155,632,3.686,633,5.426,634,5.426,635,3.686,636,3.686,637,3.043,638,3.686,639,3.686,640,3.686,641,3.686,642,3.686,643,3.686,644,3.686,645,3.686]],["title/coverage.html",[646,2.929]],["body/coverage.html",[6,1.624,12,0.038,22,0.384,41,0.402,42,0.028,43,0.028,47,1.624,51,2.297,53,2.978,66,0.899,99,1.8,129,1.8,131,2.978,132,3.286,140,1.209,154,2.978,208,2.297,210,3.286,216,2.254,218,2.564,220,2.978,249,2.978,291,1.8,292,2.254,293,2.978,294,2.006,295,2.978,296,2.572,297,2.254,299,2.978,362,2.006,393,1.624,395,1.624,433,2.978,467,2.978,513,5.033,521,2.254,522,2.978,562,1.8,588,2.978,623,2.978,628,2.564,629,2.978,646,2.564,647,3.608,648,3.608,649,4.625,650,5.383,651,4.625,652,3.608,653,4.625,654,4.625,655,2.978,656,3.608,657,3.608,658,3.608]],["title/dependencies.html",[3,1.484,659,2.096]],["body/dependencies.html",[3,1.56,12,0.039,26,1.055,28,3.162,41,0.359,42,0.03,43,0.03,73,2.13,75,2.393,76,2.393,97,3.162,98,3.162,181,2.13,182,2.393,190,2.393,386,3.162,387,3.162,444,3.413,446,3.162,491,3.162,626,3.162,627,3.162,637,3.965,660,4.803,661,3.83,662,3.83,663,3.83,664,3.83,665,4.803,666,3.83,667,3.83,668,3.83,669,3.83,670,3.83,671,3.83,672,3.83,673,3.83,674,3.83,675,3.162,676,3.162,677,3.83,678,3.83,679,3.83,680,3.83,681,3.83,682,3.83,683,3.83,684,3.83,685,3.83,686,3.83,687,3.83]],["title/miscellaneous/functions.html",[688,2.096,689,3.007]],["body/miscellaneous/functions.html",[6,2.572,12,0.035,42,0.033,43,0.033,54,1.163,71,1.901,72,2.1,655,3.852,688,3.852,689,3.852,690,4.666]],["title/index.html",[54,0.756,691,2.503]],["body/index.html",[0,0.876,1,3.761,2,1.298,3,1.432,4,1.955,5,1.955,6,1.582,7,1.955,8,1.582,9,2.902,10,2.902,11,3.145,12,0.037,13,2.803,14,2.803,15,2.872,16,3.243,17,2.529,18,1.955,19,1.955,42,0.028,43,0.028,44,2.902,45,2.902,46,2.902,47,2.59,52,2.196,93,2.498,130,1.955,209,2.196,219,2.902,298,1.955,395,2.59,461,2.902,462,2.902,463,2.902,562,2.872,581,2.902,582,2.902,583,2.902,691,2.902,692,2.902,693,2.902,694,3.754,695,2.902]],["title/license.html",[696,2.096,697,2.096,698,2.096]],["body/license.html",[12,0.029,21,0.455,42,0.023,43,0.023,73,1.419,93,1.813,99,1.273,125,1.419,140,0.855,174,3.313,236,2.107,306,2.107,333,2.107,413,1.419,534,2.107,541,1.813,553,3.017,692,2.107,693,2.107,694,2.107,695,2.107,698,4.546,699,4.074,700,3.017,701,2.552,702,2.552,703,2.552,704,2.552,705,2.552,706,2.552,707,5.507,708,5.588,709,2.552,710,2.552,711,4.271,712,5.409,713,3.525,714,2.552,715,4.271,716,2.552,717,2.552,718,2.552,719,4.663,720,3.655,721,3.655,722,2.552,723,3.655,724,4.271,725,4.663,726,3.655,727,2.552,728,2.552,729,4.271,730,3.655,731,2.552,732,2.552,733,2.552,734,2.552,735,4.663,736,2.552,737,2.552,738,3.655,739,2.552,740,2.552,741,2.552,742,3.655,743,3.655,744,2.552,745,2.552,746,2.552,747,2.552,748,2.552,749,2.552,750,2.552,751,3.655,752,2.552,753,2.552,754,2.552,755,2.552,756,2.552,757,2.552,758,2.552,759,2.552,760,2.552,761,2.552,762,2.552,763,2.552,764,2.552,765,4.663,766,2.552,767,2.552,768,2.552,769,2.552,770,2.552,771,2.552,772,2.552,773,3.655,774,4.271,775,2.552,776,2.552,777,2.552,778,2.552,779,2.552,780,2.552,781,3.655,782,2.552,783,2.552,784,2.552,785,3.655,786,3.655,787,2.552,788,2.552,789,2.552,790,2.552,791,2.552,792,2.552,793,4.271,794,3.655,795,2.552,796,2.552,797,2.552,798,2.552,799,2.552,800,3.655,801,2.552,802,2.552,803,2.552,804,2.552,805,2.552,806,3.655,807,2.552,808,2.552,809,2.552,810,2.552,811,2.552,812,2.552,813,2.552,814,3.655,815,2.552,816,2.552,817,2.552,818,2.552,819,2.552,820,2.107,821,2.552,822,2.552,823,2.552,824,2.552,825,2.552,826,2.552,827,2.552,828,2.552,829,2.552,830,2.552,831,2.552,832,3.655,833,2.552,834,2.552,835,2.552,836,2.552,837,2.552,838,2.552,839,2.552,840,2.552,841,2.552,842,2.552,843,2.552,844,2.552]],["title/modules.html",[2,1.523]],["body/modules.html",[1,2.746,2,1.624,11,2.445,12,0.032,13,2.445,14,2.445,15,2.194,16,2.445,42,0.032,43,0.032,700,4.313,845,5.769,846,5.769,847,5.769,848,5.976,849,5.225]],["title/properties.html",[133,1.639,659,2.096]],["body/properties.html",[12,0.036,42,0.034,43,0.034,133,2.151,850,4.78,851,4.78]],["title/todo.html",[696,2.096,697,2.096,852,2.096]],["body/todo.html",[3,1.596,12,0.036,42,0.03,43,0.03,117,2.447,156,2.784,212,2.784,357,2.447,620,3.234,646,2.784,675,3.234,676,3.234,699,3.234,713,4.021,820,3.234,852,3.234,853,3.918,854,3.918,855,5.705,856,3.918,857,4.872,858,3.918,859,3.918,860,3.918,861,3.918,862,3.918,863,3.918,864,3.918,865,3.918,866,3.918,867,3.918,868,3.918,869,3.918,870,3.918,871,3.918,872,3.918,873,3.918,874,3.918,875,3.918,876,3.918,877,3.918,878,3.918,879,3.918,880,3.918,881,3.918,882,3.918,883,3.918,884,4.872,885,3.918,886,3.918,887,3.918,888,3.918,889,3.918,890,3.918,891,3.918,892,3.918,893,3.918,894,3.918,895,3.918]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"properties.html":{},"todo.html":{}}}],["0",{"_index":513,"title":{},"body":{"injectables/HandlersService.html":{},"coverage.html":{}}}],["0.14.1",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["0.3.21",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":144,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["01",{"_index":567,"title":{},"body":{"controllers/StreamsController.html":{}}}],["01t00:00:00z",{"_index":568,"title":{},"body":{"controllers/StreamsController.html":{}}}],["01t01:00:00z",{"_index":575,"title":{},"body":{"controllers/StreamsController.html":{}}}],["01t02:00:00z",{"_index":578,"title":{},"body":{"controllers/StreamsController.html":{}}}],["01t12:00:00z",{"_index":241,"title":{},"body":{"entities/Handler.html":{}}}],["01t12:30:00z",{"_index":273,"title":{},"body":{"entities/Handler.html":{}}}],["04",{"_index":240,"title":{},"body":{"entities/Handler.html":{}}}],["1",{"_index":93,"title":{},"body":{"injectables/CommonService.html":{},"index.html":{},"license.html":{}}}],["1.0.0",{"_index":851,"title":{},"body":{"properties.html":{}}}],["1.8.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":265,"title":{},"body":{"entities/Handler.html":{},"injectables/HandlersService.html":{}}}],["10.0.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":170,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["11.0.0",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["11.0.12",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":146,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["12.1.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":538,"title":{},"body":{"controllers/StreamsController.html":{}}}],["1234567890",{"_index":312,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["17.13.3",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["180",{"_index":177,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["2",{"_index":693,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.1.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["2023",{"_index":566,"title":{},"body":{"controllers/StreamsController.html":{}}}],["2024",{"_index":239,"title":{},"body":{"entities/Handler.html":{}}}],["2025",{"_index":705,"title":{},"body":{"license.html":{}}}],["3",{"_index":694,"title":{},"body":{"index.html":{},"license.html":{}}}],["3.1.1",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":266,"title":{},"body":{"entities/Handler.html":{}}}],["31",{"_index":704,"title":{},"body":{"license.html":{}}}],["4",{"_index":695,"title":{},"body":{"index.html":{},"license.html":{}}}],["4.0.2",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["456",{"_index":549,"title":{},"body":{"controllers/StreamsController.html":{}}}],["5",{"_index":790,"title":{},"body":{"license.html":{}}}],["5000",{"_index":164,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["6",{"_index":692,"title":{},"body":{"index.html":{},"license.html":{}}}],["6.4.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["64",{"_index":233,"title":{},"body":{"entities/Handler.html":{},"injectables/HandlersService.html":{}}}],["7",{"_index":827,"title":{},"body":{"license.html":{}}}],["7.8.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":251,"title":{},"body":{"entities/Handler.html":{},"injectables/HandlersService.html":{}}}],["90",{"_index":867,"title":{},"body":{"todo.html":{}}}],["_emittohandler",{"_index":589,"title":{},"body":{"injectables/StreamsService.html":{}}}],["_emittohandler(handlerid",{"_index":592,"title":{},"body":{"injectables/StreamsService.html":{}}}],["abc123def456",{"_index":230,"title":{},"body":{"entities/Handler.html":{}}}],["accept",{"_index":788,"title":{},"body":{"license.html":{}}}],["access",{"_index":822,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":334,"title":{},"body":{"controllers/HandlersController.html":{}}}],["action",{"_index":825,"title":{},"body":{"license.html":{}}}],["active",{"_index":330,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["add",{"_index":857,"title":{},"body":{"todo.html":{}}}],["address",{"_index":891,"title":{},"body":{"todo.html":{}}}],["against",{"_index":781,"title":{},"body":{"license.html":{}}}],["allow",{"_index":113,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["allows",{"_index":160,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["alter",{"_index":754,"title":{},"body":{"license.html":{}}}],["api",{"_index":859,"title":{},"body":{"todo.html":{}}}],["api/handlers",{"_index":301,"title":{},"body":{"controllers/HandlersController.html":{}}}],["api/streams/:handlerid",{"_index":523,"title":{},"body":{"controllers/StreamsController.html":{}}}],["apibadrequestresponse",{"_index":376,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apicreatedresponse",{"_index":377,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apicreatedresponse({description",{"_index":309,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiforbiddenresponse",{"_index":561,"title":{},"body":{"controllers/StreamsController.html":{}}}],["apiforbiddenresponse({description",{"_index":544,"title":{},"body":{"controllers/StreamsController.html":{}}}],["apiheader",{"_index":378,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiheader({description",{"_index":319,"title":{},"body":{"controllers/HandlersController.html":{}}}],["apinocontentresponse",{"_index":379,"title":{},"body":{"controllers/HandlersController.html":{}}}],["apinotfoundresponse",{"_index":380,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiokresponse",{"_index":381,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiokresponse({description",{"_index":329,"title":{},"body":{"controllers/HandlersController.html":{}}}],["apioperation",{"_index":382,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiparam",{"_index":383,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apiproperty",{"_index":180,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["apiproperty({description",{"_index":139,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["apitags",{"_index":384,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["apitags(\"handlers",{"_index":398,"title":{},"body":{"controllers/HandlersController.html":{}}}],["apitags(\"streams",{"_index":564,"title":{},"body":{"controllers/StreamsController.html":{}}}],["apiunauthorizedresponse",{"_index":385,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["arising",{"_index":810,"title":{},"body":{"license.html":{}}}],["array",{"_index":269,"title":{},"body":{"entities/Handler.html":{}}}],["assets",{"_index":890,"title":{},"body":{"todo.html":{}}}],["assigned",{"_index":404,"title":{},"body":{"controllers/HandlersController.html":{}}}],["associated",{"_index":262,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["async",{"_index":57,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["attempt",{"_index":762,"title":{},"body":{"license.html":{}}}],["auth_token",{"_index":231,"title":{},"body":{"entities/Handler.html":{}}}],["authenticated",{"_index":325,"title":{},"body":{"controllers/HandlersController.html":{}}}],["authentication",{"_index":226,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["authtoken",{"_index":221,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{}}}],["authtokens",{"_index":417,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["autoloadentities",{"_index":193,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["automatically",{"_index":820,"title":{},"body":{"license.html":{},"todo.html":{}}}],["automation",{"_index":287,"title":{},"body":{"entities/Handler.html":{}}}],["available",{"_index":700,"title":{},"body":{"license.html":{},"modules.html":{}}}],["await",{"_index":88,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["badrequestexception",{"_index":489,"title":{},"body":{"injectables/HandlersService.html":{},"injectables/StreamsService.html":{}}}],["badrequestexception(response.error",{"_index":621,"title":{},"body":{"injectables/StreamsService.html":{}}}],["become",{"_index":772,"title":{},"body":{"license.html":{}}}],["beforeupdate",{"_index":280,"title":{},"body":{"entities/Handler.html":{}}}],["belonging",{"_index":324,"title":{},"body":{"controllers/HandlersController.html":{}}}],["belongs",{"_index":344,"title":{},"body":{"controllers/HandlersController.html":{}}}],["below",{"_index":733,"title":{},"body":{"license.html":{}}}],["body",{"_index":367,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["boolean",{"_index":615,"title":{},"body":{"injectables/StreamsService.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bot",{"_index":286,"title":{},"body":{"entities/Handler.html":{}}}],["bots",{"_index":159,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["brief",{"_index":173,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["browse",{"_index":848,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":845,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":769,"title":{},"body":{"license.html":{}}}],["business",{"_index":742,"title":{},"body":{"license.html":{}}}],["ca",{"_index":118,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["cases",{"_index":876,"title":{},"body":{"todo.html":{}}}],["changes",{"_index":558,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["ci",{"_index":863,"title":{},"body":{"todo.html":{}}}],["claims",{"_index":780,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/CreateHandlerDto.html":{},"classes/HandlersGateway.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":130,"title":{},"body":{"classes/CreateHandlerDto.html":{},"classes/HandlersGateway.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"index.html":{}}}],["clean",{"_index":882,"title":{},"body":{"todo.html":{}}}],["cleanup",{"_index":887,"title":{},"body":{"todo.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_commonmodule",{"_index":44,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_commonmodule_exports",{"_index":45,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_commonmodule_providers",{"_index":46,"title":{},"body":{"modules/CommonModule.html":{},"index.html":{}}}],["cluster_handlersmodule",{"_index":461,"title":{},"body":{"modules/HandlersModule.html":{},"index.html":{}}}],["cluster_handlersmodule_exports",{"_index":462,"title":{},"body":{"modules/HandlersModule.html":{},"index.html":{}}}],["cluster_handlersmodule_providers",{"_index":463,"title":{},"body":{"modules/HandlersModule.html":{},"index.html":{}}}],["cluster_streamsmodule",{"_index":581,"title":{},"body":{"modules/StreamsModule.html":{},"index.html":{}}}],["cluster_streamsmodule_exports",{"_index":582,"title":{},"body":{"modules/StreamsModule.html":{},"index.html":{}}}],["cluster_streamsmodule_imports",{"_index":584,"title":{},"body":{"modules/StreamsModule.html":{}}}],["cluster_streamsmodule_providers",{"_index":583,"title":{},"body":{"modules/StreamsModule.html":{},"index.html":{}}}],["code",{"_index":713,"title":{},"body":{"license.html":{},"todo.html":{}}}],["codebase",{"_index":895,"title":{},"body":{"todo.html":{}}}],["column",{"_index":281,"title":{},"body":{"entities/Handler.html":{}}}],["comments",{"_index":893,"title":{},"body":{"todo.html":{}}}],["commercial",{"_index":735,"title":{},"body":{"license.html":{}}}],["common.service",{"_index":50,"title":{},"body":{"modules/CommonModule.html":{}}}],["common/common.module",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["common/common.service",{"_index":388,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["commonmodule",{"_index":11,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"index.html":{},"modules.html":{}}}],["commonservice",{"_index":47,"title":{"injectables/CommonService.html":{}},"body":{"modules/CommonModule.html":{},"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"coverage.html":{},"index.html":{}}}],["compensation",{"_index":784,"title":{},"body":{"license.html":{}}}],["compete",{"_index":740,"title":{},"body":{"license.html":{}}}],["competitive",{"_index":750,"title":{},"body":{"license.html":{}}}],["compression",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["concise",{"_index":169,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["config/config.module",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":13,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"index.html":{},"modules.html":{}}}],["configuration",{"_index":364,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["conflict",{"_index":837,"title":{},"body":{"license.html":{}}}],["connections",{"_index":229,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["consequential",{"_index":805,"title":{},"body":{"license.html":{}}}],["const",{"_index":79,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["constructor",{"_index":59,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["constructor(datasource",{"_index":60,"title":{},"body":{"injectables/CommonService.html":{}}}],["constructor(handlerrepository",{"_index":472,"title":{},"body":{"injectables/HandlersService.html":{}}}],["constructor(handlersgateway",{"_index":590,"title":{},"body":{"injectables/StreamsService.html":{}}}],["constructor(handlersservice",{"_index":437,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"injectables/CommonService.html":{},"classes/HandlersGateway.html":{},"injectables/StreamsService.html":{}}}],["contact",{"_index":843,"title":{},"body":{"license.html":{}}}],["containing",{"_index":547,"title":{},"body":{"controllers/StreamsController.html":{}}}],["contribute",{"_index":730,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":765,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":776,"title":{},"body":{"license.html":{}}}],["controller",{"_index":296,"title":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"coverage.html":{}}}],["controller(\"api/handlers",{"_index":400,"title":{},"body":{"controllers/HandlersController.html":{}}}],["controller(\"api/streams/:handlerid",{"_index":565,"title":{},"body":{"controllers/StreamsController.html":{}}}],["controllers",{"_index":298,"title":{},"body":{"controllers/HandlersController.html":{},"modules/HandlersModule.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["copyright",{"_index":755,"title":{},"body":{"license.html":{}}}],["core",{"_index":856,"title":{},"body":{"todo.html":{}}}],["cors",{"_index":640,"title":{},"body":{"classes/WsAdapter.html":{}}}],["count",{"_index":493,"title":{},"body":{"injectables/HandlersService.html":{}}}],["coverage",{"_index":646,"title":{"coverage.html":{}},"body":{"coverage.html":{},"todo.html":{}}}],["create",{"_index":161,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{}}}],["created",{"_index":238,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["created_at",{"_index":242,"title":{},"body":{"entities/Handler.html":{}}}],["createdat",{"_index":222,"title":{},"body":{"entities/Handler.html":{},"controllers/StreamsController.html":{}}}],["createhandlerdto",{"_index":129,"title":{"classes/CreateHandlerDto.html":{}},"body":{"classes/CreateHandlerDto.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"classes/UpdateHandlerDto.html":{},"coverage.html":{}}}],["createhandlerdto.iconid",{"_index":508,"title":{},"body":{"injectables/HandlersService.html":{}}}],["createhandlerdto.longdescription",{"_index":506,"title":{},"body":{"injectables/HandlersService.html":{}}}],["createhandlerdto.name",{"_index":502,"title":{},"body":{"injectables/HandlersService.html":{}}}],["createhandlerdto.shortdescription",{"_index":504,"title":{},"body":{"injectables/HandlersService.html":{}}}],["createioserver",{"_index":631,"title":{},"body":{"classes/WsAdapter.html":{}}}],["createioserver(port",{"_index":632,"title":{},"body":{"classes/WsAdapter.html":{}}}],["createone",{"_index":302,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["createone(createhandlerdto",{"_index":308,"title":{},"body":{"controllers/HandlersController.html":{}}}],["createone(userid",{"_index":476,"title":{},"body":{"injectables/HandlersService.html":{}}}],["creates",{"_index":402,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["createstream",{"_index":524,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["createstream(data",{"_index":528,"title":{},"body":{"controllers/StreamsController.html":{}}}],["createstream(handlerid",{"_index":596,"title":{},"body":{"injectables/StreamsService.html":{}}}],["credit",{"_index":785,"title":{},"body":{"license.html":{}}}],["current_timestamp",{"_index":244,"title":{},"body":{"entities/Handler.html":{}}}],["currently",{"_index":331,"title":{},"body":{"controllers/HandlersController.html":{}}}],["damages",{"_index":807,"title":{},"body":{"license.html":{}}}],["data",{"_index":541,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"license.html":{}}}],["data.interface",{"_index":448,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["data.interface.ts",{"_index":295,"title":{},"body":{"interfaces/HandlerSocketData.html":{},"coverage.html":{}}}],["database",{"_index":194,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":14,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"index.html":{},"modules.html":{}}}],["datasource",{"_index":61,"title":{},"body":{"injectables/CommonService.html":{}}}],["date",{"_index":236,"title":{},"body":{"entities/Handler.html":{},"license.html":{}}}],["db_host",{"_index":104,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["db_name",{"_index":106,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["db_password",{"_index":108,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["db_port",{"_index":109,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["db_ssl_mode",{"_index":111,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["db_user",{"_index":121,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["declare",{"_index":213,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["decompile",{"_index":761,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":138,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"controllers/StreamsController.html":{}}}],["dedent",{"_index":386,"title":{},"body":{"controllers/HandlersController.html":{},"dependencies.html":{}}}],["default",{"_index":285,"title":{},"body":{"entities/Handler.html":{}}}],["default(\"development",{"_index":126,"title":{},"body":{"modules/ConfigModule.html":{}}}],["default(\"disable",{"_index":120,"title":{},"body":{"modules/ConfigModule.html":{}}}],["defaulteventsmap",{"_index":443,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["defined",{"_index":62,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["delete",{"_index":357,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"todo.html":{}}}],["delete(\":id",{"_index":428,"title":{},"body":{"controllers/HandlersController.html":{}}}],["delete(\":streamid",{"_index":572,"title":{},"body":{"controllers/StreamsController.html":{}}}],["deleted",{"_index":356,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["deleted'})@apinotfoundresponse({description",{"_index":353,"title":{},"body":{"controllers/HandlersController.html":{}}}],["deleteone",{"_index":468,"title":{},"body":{"injectables/HandlersService.html":{}}}],["deleteone(id",{"_index":478,"title":{},"body":{"injectables/HandlersService.html":{}}}],["deletes",{"_index":355,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["deletestream",{"_index":525,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["deletestream(handlerid",{"_index":542,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["deploy",{"_index":749,"title":{},"body":{"license.html":{}}}],["derivative",{"_index":747,"title":{},"body":{"license.html":{}}}],["description",{"_index":151,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["descriptive",{"_index":168,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["detailed",{"_index":153,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["details",{"_index":340,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["details'})@apiparam({description",{"_index":347,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["developed",{"_index":709,"title":{},"body":{"license.html":{}}}],["developing",{"_index":157,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["development",{"_index":212,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"todo.html":{}}}],["direct",{"_index":802,"title":{},"body":{"license.html":{}}}],["disable",{"_index":114,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["discontinue",{"_index":816,"title":{},"body":{"license.html":{}}}],["discord",{"_index":158,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["display",{"_index":167,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["distribute",{"_index":744,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":717,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":154,"title":{},"body":{"classes/CreateHandlerDto.html":{},"coverage.html":{}}}],["doesn't",{"_index":533,"title":{},"body":{"controllers/StreamsController.html":{}}}],["dto/create",{"_index":389,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["dto/update",{"_index":391,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["e.g",{"_index":767,"title":{},"body":{"license.html":{}}}],["ease",{"_index":163,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["edge",{"_index":875,"title":{},"body":{"todo.html":{}}}],["effective",{"_index":702,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":332,"title":{},"body":{"controllers/HandlersController.html":{}}}],["endpoints",{"_index":860,"title":{},"body":{"todo.html":{}}}],["enforcement",{"_index":812,"title":{},"body":{"license.html":{}}}],["engineer",{"_index":760,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":865,"title":{},"body":{"todo.html":{}}}],["entities",{"_index":219,"title":{},"body":{"entities/Handler.html":{},"index.html":{}}}],["entities/handler.entity",{"_index":392,"title":{},"body":{"controllers/HandlersController.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{}}}],["entity",{"_index":218,"title":{"entities/Handler.html":{}},"body":{"entities/Handler.html":{},"coverage.html":{}}}],["environment",{"_index":99,"title":{"interfaces/Environment.html":{}},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"coverage.html":{},"license.html":{}}}],["error",{"_index":616,"title":{},"body":{"injectables/StreamsService.html":{}}}],["error(\"unauthorized",{"_index":645,"title":{},"body":{"classes/WsAdapter.html":{}}}],["establish",{"_index":405,"title":{},"body":{"controllers/HandlersController.html":{}}}],["event",{"_index":593,"title":{},"body":{"injectables/StreamsService.html":{}}}],["example",{"_index":143,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["exclusive",{"_index":726,"title":{},"body":{"license.html":{}}}],["existing",{"_index":518,"title":{},"body":{"injectables/HandlersService.html":{}}}],["export",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["express",{"_index":73,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":217,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{}}}],["external",{"_index":871,"title":{},"body":{"todo.html":{}}}],["extract",{"_index":763,"title":{},"body":{"license.html":{}}}],["failure",{"_index":877,"title":{},"body":{"todo.html":{}}}],["file",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"coverage.html":{}}}],["files",{"_index":889,"title":{},"body":{"todo.html":{}}}],["findall",{"_index":303,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["findall(@req",{"_index":410,"title":{},"body":{"controllers/HandlersController.html":{}}}],["findall(request",{"_index":318,"title":{},"body":{"controllers/HandlersController.html":{}}}],["findall(userid",{"_index":480,"title":{},"body":{"injectables/HandlersService.html":{}}}],["findallactive",{"_index":304,"title":{},"body":{"controllers/HandlersController.html":{}}}],["findallusingauthtokens",{"_index":469,"title":{},"body":{"injectables/HandlersService.html":{}}}],["findallusingauthtokens(authtokens",{"_index":482,"title":{},"body":{"injectables/HandlersService.html":{}}}],["findone",{"_index":305,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["findone(id",{"_index":337,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["findoneusingauthtoken",{"_index":470,"title":{},"body":{"injectables/HandlersService.html":{}}}],["findoneusingauthtoken(authtoken",{"_index":485,"title":{},"body":{"injectables/HandlersService.html":{}}}],["fitness",{"_index":797,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":770,"title":{},"body":{"license.html":{}}}],["format",{"_index":620,"title":{},"body":{"injectables/StreamsService.html":{},"todo.html":{}}}],["found",{"_index":422,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["found'})@apiokresponse({description",{"_index":339,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["found'})@apioperation({description",{"_index":354,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["full",{"_index":119,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["function",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":156,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"todo.html":{}}}],["functions",{"_index":689,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generating",{"_index":752,"title":{},"body":{"license.html":{}}}],["get(\":id",{"_index":423,"title":{},"body":{"controllers/HandlersController.html":{}}}],["get(\":streamid",{"_index":576,"title":{},"body":{"controllers/StreamsController.html":{}}}],["get(\"active/list",{"_index":412,"title":{},"body":{"controllers/HandlersController.html":{}}}],["getting",{"_index":696,"title":{"license.html":{},"todo.html":{}},"body":{}}],["getuseridfromrequest",{"_index":58,"title":{},"body":{"injectables/CommonService.html":{}}}],["getuseridfromrequest(request",{"_index":68,"title":{},"body":{"injectables/CommonService.html":{}}}],["global",{"_index":49,"title":{},"body":{"modules/CommonModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["governed",{"_index":830,"title":{},"body":{"license.html":{}}}],["governing",{"_index":828,"title":{},"body":{"license.html":{}}}],["governs",{"_index":706,"title":{},"body":{"license.html":{}}}],["grant",{"_index":721,"title":{},"body":{"license.html":{}}}],["grants",{"_index":722,"title":{},"body":{"license.html":{}}}],["graph",{"_index":849,"title":{},"body":{"modules.html":{}}}],["h",{"_index":425,"title":{},"body":{"controllers/HandlersController.html":{}}}],["h1234567",{"_index":250,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["handleconnection",{"_index":436,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["handleconnection(socket",{"_index":441,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["handler",{"_index":140,"title":{"entities/Handler.html":{}},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"coverage.html":{},"license.html":{}}}],["handler's",{"_index":155,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["handler'})@apinotfoundresponse({description",{"_index":536,"title":{},"body":{"controllers/StreamsController.html":{}}}],["handler'})@apiparam({description",{"_index":358,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handler'})@post",{"_index":316,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handler.authtoken",{"_index":509,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handler.dto",{"_index":390,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"classes/UpdateHandlerDto.html":{}}}],["handler.dto.ts",{"_index":132,"title":{},"body":{"classes/CreateHandlerDto.html":{},"classes/UpdateHandlerDto.html":{},"coverage.html":{}}}],["handler.dto.ts:14",{"_index":149,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["handler.dto.ts:26",{"_index":166,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["handler.dto.ts:37",{"_index":172,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["handler.dto.ts:48",{"_index":179,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["handler.iconid",{"_index":507,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handler.id",{"_index":460,"title":{},"body":{"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{}}}],["handler.longdescription",{"_index":505,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handler.name",{"_index":501,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handler.shortdescription",{"_index":503,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handler.userid",{"_index":427,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{}}}],["handlerid",{"_index":529,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["handlerid'})@apiparam({description",{"_index":548,"title":{},"body":{"controllers/StreamsController.html":{}}}],["handlerid'})@post",{"_index":539,"title":{},"body":{"controllers/StreamsController.html":{}}}],["handlerrepository",{"_index":475,"title":{},"body":{"injectables/HandlersService.html":{}}}],["handlers",{"_index":283,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{}}}],["handlers'})@get",{"_index":327,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handlers'})@get('active/list",{"_index":335,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handlers.controller",{"_index":465,"title":{},"body":{"modules/HandlersModule.html":{}}}],["handlers.gateway",{"_index":394,"title":{},"body":{"controllers/HandlersController.html":{},"modules/HandlersModule.html":{}}}],["handlers.map",{"_index":421,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handlers.service",{"_index":396,"title":{},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{}}}],["handlers/handlers.gateway",{"_index":586,"title":{},"body":{"modules/StreamsModule.html":{},"injectables/StreamsService.html":{}}}],["handlers/handlers.module",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/StreamsModule.html":{}}}],["handlerscontroller",{"_index":297,"title":{"controllers/HandlersController.html":{}},"body":{"controllers/HandlersController.html":{},"modules/HandlersModule.html":{},"coverage.html":{}}}],["handlersgateway",{"_index":393,"title":{"classes/HandlersGateway.html":{}},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"coverage.html":{}}}],["handlersmodule",{"_index":15,"title":{"modules/HandlersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{},"modules.html":{}}}],["handlersocketdata",{"_index":292,"title":{"interfaces/HandlerSocketData.html":{}},"body":{"interfaces/HandlerSocketData.html":{},"classes/HandlersGateway.html":{},"coverage.html":{}}}],["handlersservice",{"_index":395,"title":{"injectables/HandlersService.html":{}},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"coverage.html":{},"index.html":{}}}],["handler})@apiheader({description",{"_index":311,"title":{},"body":{"controllers/HandlersController.html":{}}}],["handler})@apioperation({description",{"_index":341,"title":{},"body":{"controllers/HandlersController.html":{}}}],["harm",{"_index":741,"title":{},"body":{"license.html":{}}}],["host",{"_index":196,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["httpcode",{"_index":368,"title":{},"body":{"controllers/HandlersController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":429,"title":{},"body":{"controllers/HandlersController.html":{}}}],["httpstatus",{"_index":369,"title":{},"body":{"controllers/HandlersController.html":{}}}],["icon",{"_index":141,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["icon_id",{"_index":247,"title":{},"body":{"entities/Handler.html":{}}}],["icon_id'})@column({length",{"_index":246,"title":{},"body":{"entities/Handler.html":{}}}],["iconid",{"_index":134,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["icons8.com",{"_index":142,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["id",{"_index":83,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{}}}],["id'})@delete(':id')@httpcode(httpstatus.no_content",{"_index":359,"title":{},"body":{"controllers/HandlersController.html":{}}}],["id'})@get(':id",{"_index":349,"title":{},"body":{"controllers/HandlersController.html":{}}}],["id'})@primarycolumn({length",{"_index":252,"title":{},"body":{"entities/Handler.html":{}}}],["id'})@put(':id",{"_index":365,"title":{},"body":{"controllers/HandlersController.html":{}}}],["identifier",{"_index":249,"title":{},"body":{"entities/Handler.html":{},"coverage.html":{}}}],["implements",{"_index":434,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["implied",{"_index":795,"title":{},"body":{"license.html":{}}}],["import",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{}}}],["imports",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{}}}],["imposes",{"_index":714,"title":{},"body":{"license.html":{}}}],["improvements",{"_index":869,"title":{},"body":{"todo.html":{}}}],["in(authtokens",{"_index":516,"title":{},"body":{"injectables/HandlersService.html":{}}}],["inc",{"_index":711,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":804,"title":{},"body":{"license.html":{}}}],["include",{"_index":884,"title":{},"body":{"todo.html":{}}}],["included",{"_index":345,"title":{},"body":{"controllers/HandlersController.html":{}}}],["including",{"_index":774,"title":{},"body":{"license.html":{}}}],["index",{"_index":54,"title":{"index.html":{}},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{},"miscellaneous/functions.html":{}}}],["indirect",{"_index":803,"title":{},"body":{"license.html":{}}}],["info",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{}}}],["information",{"_index":342,"title":{},"body":{"controllers/HandlersController.html":{}}}],["infringement",{"_index":799,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":51,"title":{"injectables/CommonService.html":{},"injectables/HandlersService.html":{},"injectables/StreamsService.html":{}},"body":{"injectables/CommonService.html":{},"injectables/HandlersService.html":{},"injectables/StreamsService.html":{},"coverage.html":{}}}],["injectables",{"_index":52,"title":{},"body":{"injectables/CommonService.html":{},"injectables/HandlersService.html":{},"injectables/StreamsService.html":{},"index.html":{}}}],["injectrepository",{"_index":490,"title":{},"body":{"injectables/HandlersService.html":{}}}],["injectrepository(handler",{"_index":492,"title":{},"body":{"injectables/HandlersService.html":{}}}],["inquiries",{"_index":841,"title":{},"body":{"license.html":{}}}],["install",{"_index":883,"title":{},"body":{"todo.html":{}}}],["integration",{"_index":858,"title":{},"body":{"todo.html":{}}}],["intellectual",{"_index":775,"title":{},"body":{"license.html":{}}}],["interests",{"_index":720,"title":{},"body":{"license.html":{}}}],["interface",{"_index":208,"title":{"interfaces/Environment.html":{},"interfaces/HandlerSocketData.html":{},"interfaces/ProcessEnv.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/HandlerSocketData.html":{},"interfaces/ProcessEnv.html":{},"coverage.html":{}}}],["interfaces",{"_index":209,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/HandlerSocketData.html":{},"interfaces/ProcessEnv.html":{},"index.html":{}}}],["interfaces/handler",{"_index":447,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["internal",{"_index":736,"title":{},"body":{"license.html":{}}}],["interpreted",{"_index":831,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":397,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["ioadapter",{"_index":630,"title":{},"body":{"classes/WsAdapter.html":{}}}],["iran",{"_index":835,"title":{},"body":{"license.html":{}}}],["islamic",{"_index":833,"title":{},"body":{"license.html":{}}}],["isobject",{"_index":602,"title":{},"body":{"injectables/StreamsService.html":{}}}],["isobject(response",{"_index":611,"title":{},"body":{"injectables/StreamsService.html":{}}}],["isolate",{"_index":872,"title":{},"body":{"todo.html":{}}}],["isstring",{"_index":74,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["isstring(authtoken",{"_index":450,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["isstring(response.error",{"_index":617,"title":{},"body":{"injectables/StreamsService.html":{}}}],["isstring(sessionid",{"_index":84,"title":{},"body":{"injectables/CommonService.html":{}}}],["isstring(userid",{"_index":407,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["joi",{"_index":98,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["joi.number().port().default(3000",{"_index":128,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.number().port().default(5432",{"_index":110,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.object",{"_index":103,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string",{"_index":107,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().default(\"postgres",{"_index":122,"title":{},"body":{"modules/ConfigModule.html":{}}}],["joi.string().hostname().default(\"localhost",{"_index":105,"title":{},"body":{"modules/ConfigModule.html":{}}}],["last",{"_index":271,"title":{},"body":{"entities/Handler.html":{}}}],["law",{"_index":829,"title":{},"body":{"license.html":{}}}],["laws",{"_index":832,"title":{},"body":{"license.html":{}}}],["legal",{"_index":824,"title":{},"body":{"license.html":{}}}],["legal@streamier.net",{"_index":844,"title":{},"body":{"license.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["length",{"_index":284,"title":{},"body":{"entities/Handler.html":{}}}],["liability",{"_index":792,"title":{},"body":{"license.html":{}}}],["liable",{"_index":801,"title":{},"body":{"license.html":{}}}],["license",{"_index":698,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensee",{"_index":723,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":839,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":712,"title":{},"body":{"license.html":{}}}],["limit",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["limited",{"_index":724,"title":{},"body":{"license.html":{}}}],["lint",{"_index":894,"title":{},"body":{"todo.html":{}}}],["list",{"_index":321,"title":{},"body":{"controllers/HandlersController.html":{}}}],["listings",{"_index":175,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["logic",{"_index":873,"title":{},"body":{"todo.html":{}}}],["logo",{"_index":886,"title":{},"body":{"todo.html":{}}}],["long",{"_index":150,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["long_description",{"_index":255,"title":{},"body":{"entities/Handler.html":{}}}],["long_description'})@column({length",{"_index":254,"title":{},"body":{"entities/Handler.html":{}}}],["longdescription",{"_index":135,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["loss",{"_index":808,"title":{},"body":{"license.html":{}}}],["made",{"_index":766,"title":{},"body":{"license.html":{}}}],["manage",{"_index":162,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["march",{"_index":703,"title":{},"body":{"license.html":{}}}],["matching",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"properties.html":{},"todo.html":{}}}],["maxhandlersperuser",{"_index":495,"title":{},"body":{"injectables/HandlersService.html":{}}}],["maximum",{"_index":496,"title":{},"body":{"injectables/HandlersService.html":{}}}],["maxitems",{"_index":264,"title":{},"body":{"entities/Handler.html":{}}}],["maxlength",{"_index":145,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["maxlength(100",{"_index":186,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["maxlength(12",{"_index":184,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["maxlength(180",{"_index":187,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["maxlength(5000",{"_index":185,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["merchantability",{"_index":796,"title":{},"body":{"license.html":{}}}],["merge",{"_index":789,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":55,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["minimum",{"_index":866,"title":{},"body":{"todo.html":{}}}],["miscellaneous",{"_index":688,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["missing",{"_index":399,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["mock",{"_index":870,"title":{},"body":{"todo.html":{}}}],["modes",{"_index":878,"title":{},"body":{"todo.html":{}}}],["modification",{"_index":716,"title":{},"body":{"license.html":{}}}],["modify",{"_index":743,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{},"modules.html":{}}}],["moral",{"_index":778,"title":{},"body":{"license.html":{}}}],["name",{"_index":65,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["name'})@column({length",{"_index":257,"title":{},"body":{"entities/Handler.html":{}}}],["namespace",{"_index":214,"title":{},"body":{"interfaces/Environment.html":{},"classes/HandlersGateway.html":{},"interfaces/ProcessEnv.html":{}}}],["nestconfigmodule",{"_index":96,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestconfigmodule.forroot",{"_index":101,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestjs",{"_index":675,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"controllers/HandlersController.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":97,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":626,"title":{},"body":{"classes/UpdateHandlerDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":637,"title":{},"body":{"classes/WsAdapter.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":181,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":190,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":446,"title":{},"body":{"classes/HandlersGateway.html":{},"dependencies.html":{}}}],["new",{"_index":291,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"coverage.html":{}}}],["next",{"_index":643,"title":{},"body":{"classes/WsAdapter.html":{}}}],["next(new",{"_index":644,"title":{},"body":{"classes/WsAdapter.html":{}}}],["node_env",{"_index":123,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["nodejs",{"_index":215,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["non",{"_index":725,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":370,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"injectables/StreamsService.html":{}}}],["notfoundexception(\"handler",{"_index":514,"title":{},"body":{"injectables/HandlersService.html":{},"injectables/StreamsService.html":{}}}],["notice",{"_index":818,"title":{},"body":{"license.html":{}}}],["notices",{"_index":758,"title":{},"body":{"license.html":{}}}],["notimplementedexception",{"_index":601,"title":{},"body":{"injectables/StreamsService.html":{}}}],["notimplementedexception(\"invalid",{"_index":619,"title":{},"body":{"injectables/StreamsService.html":{}}}],["null",{"_index":86,"title":{},"body":{"injectables/CommonService.html":{}}}],["number",{"_index":211,"title":{},"body":{"interfaces/Environment.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"classes/WsAdapter.html":{}}}],["obligation",{"_index":787,"title":{},"body":{"license.html":{}}}],["obscure",{"_index":753,"title":{},"body":{"license.html":{}}}],["ongatewayconnection",{"_index":435,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["opportunities",{"_index":809,"title":{},"body":{"license.html":{}}}],["optional",{"_index":67,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["options",{"_index":633,"title":{},"body":{"classes/WsAdapter.html":{}}}],["origin",{"_index":641,"title":{},"body":{"classes/WsAdapter.html":{}}}],["out",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["outlined",{"_index":732,"title":{},"body":{"license.html":{}}}],["override",{"_index":638,"title":{},"body":{"classes/WsAdapter.html":{}}}],["overview",{"_index":691,"title":{"index.html":{}},"body":{"index.html":{}}}],["owned",{"_index":710,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":783,"title":{},"body":{"license.html":{}}}],["owns",{"_index":277,"title":{},"body":{"entities/Handler.html":{}}}],["package",{"_index":659,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":371,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["param(\"handlerid",{"_index":570,"title":{},"body":{"controllers/StreamsController.html":{}}}],["param(\"id",{"_index":424,"title":{},"body":{"controllers/HandlersController.html":{}}}],["param(\"streamid",{"_index":573,"title":{},"body":{"controllers/StreamsController.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["partialtype",{"_index":625,"title":{},"body":{"classes/UpdateHandlerDto.html":{}}}],["partialtype(createhandlerdto",{"_index":624,"title":{},"body":{"classes/UpdateHandlerDto.html":{}}}],["particular",{"_index":798,"title":{},"body":{"license.html":{}}}],["pass",{"_index":881,"title":{},"body":{"todo.html":{}}}],["password",{"_index":198,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["performance/stress",{"_index":879,"title":{},"body":{"todo.html":{}}}],["permission",{"_index":534,"title":{},"body":{"controllers/StreamsController.html":{},"license.html":{}}}],["permissions",{"_index":840,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":764,"title":{},"body":{"license.html":{}}}],["personal",{"_index":734,"title":{},"body":{"license.html":{}}}],["please",{"_index":842,"title":{},"body":{"license.html":{}}}],["port",{"_index":127,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"classes/WsAdapter.html":{}}}],["post",{"_index":372,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"classes/WsAdapter.html":{}}}],["postgres",{"_index":205,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["prefer",{"_index":115,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{}}}],["prefix",{"_index":300,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["previews",{"_index":176,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["primarycolumn",{"_index":282,"title":{},"body":{"entities/Handler.html":{}}}],["principles",{"_index":838,"title":{},"body":{"license.html":{}}}],["private",{"_index":401,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["process.env.db_host",{"_index":197,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.db_name",{"_index":195,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.db_password",{"_index":199,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.db_port",{"_index":200,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.db_ssl_mode",{"_index":202,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.db_user",{"_index":207,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["process.env.node_env",{"_index":204,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["processenv",{"_index":216,"title":{"interfaces/ProcessEnv.html":{}},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"coverage.html":{}}}],["production",{"_index":125,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"license.html":{}}}],["promise",{"_index":72,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"miscellaneous/functions.html":{}}}],["promise((resolve",{"_index":608,"title":{},"body":{"injectables/StreamsService.html":{}}}],["properties",{"_index":133,"title":{"properties.html":{}},"body":{"classes/CreateHandlerDto.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"classes/HandlersGateway.html":{},"properties.html":{}}}],["property",{"_index":773,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":757,"title":{},"body":{"license.html":{}}}],["protect",{"_index":718,"title":{},"body":{"license.html":{}}}],["provided",{"_index":738,"title":{},"body":{"license.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["public",{"_index":56,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["publicly",{"_index":333,"title":{},"body":{"controllers/HandlersController.html":{},"license.html":{}}}],["purpose",{"_index":174,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"license.html":{}}}],["purposes",{"_index":737,"title":{},"body":{"license.html":{}}}],["pursue",{"_index":823,"title":{},"body":{"license.html":{}}}],["put",{"_index":373,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["put(\":id",{"_index":431,"title":{},"body":{"controllers/HandlersController.html":{}}}],["put(\":streamid",{"_index":579,"title":{},"body":{"controllers/StreamsController.html":{}}}],["radash",{"_index":75,"title":{},"body":{"injectables/CommonService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"dependencies.html":{}}}],["randomatic",{"_index":491,"title":{},"body":{"injectables/HandlersService.html":{},"dependencies.html":{}}}],["randomatic(\"a0",{"_index":498,"title":{},"body":{"injectables/HandlersService.html":{}}}],["randomatic(\"aa0",{"_index":500,"title":{},"body":{"injectables/HandlersService.html":{}}}],["reached",{"_index":497,"title":{},"body":{"injectables/HandlersService.html":{}}}],["read",{"_index":604,"title":{},"body":{"injectables/StreamsService.html":{}}}],["readonly",{"_index":78,"title":{},"body":{"injectables/CommonService.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["readstream",{"_index":526,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["readstream(handlerid",{"_index":552,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["redoc",{"_index":676,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflect",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["regard",{"_index":836,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":782,"title":{},"body":{"license.html":{}}}],["reject",{"_index":609,"title":{},"body":{"injectables/StreamsService.html":{}}}],["reject(new",{"_index":618,"title":{},"body":{"injectables/StreamsService.html":{}}}],["relevant",{"_index":880,"title":{},"body":{"todo.html":{}}}],["remove",{"_index":306,"title":{},"body":{"controllers/HandlersController.html":{},"license.html":{}}}],["remove(id",{"_index":351,"title":{},"body":{"controllers/HandlersController.html":{}}}],["repository",{"_index":473,"title":{},"body":{"injectables/HandlersService.html":{}}}],["republic",{"_index":834,"title":{},"body":{"license.html":{}}}],["req",{"_index":374,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["request",{"_index":69,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["request.headers[\"x",{"_index":81,"title":{},"body":{"injectables/CommonService.html":{}}}],["require",{"_index":116,"title":{},"body":{"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"controllers/HandlersController.html":{},"interfaces/ProcessEnv.html":{}}}],["required",{"_index":147,"title":{},"body":{"classes/CreateHandlerDto.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["reserves",{"_index":814,"title":{},"body":{"license.html":{}}}],["reset",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}],["resolve(response",{"_index":622,"title":{},"body":{"injectables/StreamsService.html":{}}}],["response",{"_index":346,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/StreamsService.html":{}}}],["response.success",{"_index":614,"title":{},"body":{"injectables/StreamsService.html":{}}}],["restrictions",{"_index":715,"title":{},"body":{"license.html":{}}}],["result",{"_index":87,"title":{},"body":{"injectables/CommonService.html":{},"injectables/HandlersService.html":{}}}],["result.affected",{"_index":512,"title":{},"body":{"injectables/HandlersService.html":{}}}],["result[0]?.user_id",{"_index":94,"title":{},"body":{"injectables/CommonService.html":{}}}],["results",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"properties.html":{},"todo.html":{}}}],["retain",{"_index":777,"title":{},"body":{"license.html":{}}}],["retrieve",{"_index":348,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["retrieved",{"_index":554,"title":{},"body":{"controllers/StreamsController.html":{}}}],["retrieves",{"_index":323,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["return",{"_index":85,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{}}}],["returns",{"_index":71,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{},"miscellaneous/functions.html":{}}}],["revenue",{"_index":751,"title":{},"body":{"license.html":{}}}],["reverse",{"_index":759,"title":{},"body":{"license.html":{}}}],["revocable",{"_index":728,"title":{},"body":{"license.html":{}}}],["revoke",{"_index":815,"title":{},"body":{"license.html":{}}}],["right",{"_index":729,"title":{},"body":{"license.html":{}}}],["rights",{"_index":719,"title":{},"body":{"license.html":{}}}],["run",{"_index":864,"title":{},"body":{"todo.html":{}}}],["rxjs",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":454,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["s.handshake.auth.token",{"_index":455,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["s.id",{"_index":456,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["schema",{"_index":531,"title":{},"body":{"controllers/StreamsController.html":{}}}],["select",{"_index":90,"title":{},"body":{"injectables/CommonService.html":{}}}],["sell",{"_index":746,"title":{},"body":{"license.html":{}}}],["sentry",{"_index":885,"title":{},"body":{"todo.html":{}}}],["server",{"_index":413,"title":{},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{},"license.html":{}}}],["server.fetchsockets",{"_index":416,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/StreamsService.html":{}}}],["server.use((_",{"_index":642,"title":{},"body":{"classes/WsAdapter.html":{}}}],["serveroptions",{"_index":634,"title":{},"body":{"classes/WsAdapter.html":{}}}],["session",{"_index":82,"title":{},"body":{"injectables/CommonService.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["sessionid",{"_index":80,"title":{},"body":{"injectables/CommonService.html":{}}}],["sessions",{"_index":92,"title":{},"body":{"injectables/CommonService.html":{}}}],["set",{"_index":861,"title":{},"body":{"todo.html":{}}}],["shall",{"_index":800,"title":{},"body":{"license.html":{}}}],["short_description",{"_index":260,"title":{},"body":{"entities/Handler.html":{}}}],["short_description'})@column({length",{"_index":259,"title":{},"body":{"entities/Handler.html":{}}}],["shortdescription",{"_index":136,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{}}}],["simple",{"_index":268,"title":{},"body":{"entities/Handler.html":{}}}],["socket",{"_index":294,"title":{},"body":{"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/StreamsService.html":{},"coverage.html":{}}}],["socket.data.id",{"_index":459,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["socket.disconnect(true",{"_index":451,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["socket.emit(`stream:${event",{"_index":610,"title":{},"body":{"injectables/StreamsService.html":{}}}],["socket.handshake.auth.token",{"_index":419,"title":{},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{}}}],["socket.id",{"_index":457,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["socket.io",{"_index":444,"title":{},"body":{"classes/HandlersGateway.html":{},"classes/WsAdapter.html":{},"dependencies.html":{}}}],["socketdata",{"_index":606,"title":{},"body":{"injectables/StreamsService.html":{}}}],["socketdata.id",{"_index":607,"title":{},"body":{"injectables/StreamsService.html":{}}}],["sockets",{"_index":415,"title":{},"body":{"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/StreamsService.html":{}}}],["sockets.find",{"_index":605,"title":{},"body":{"injectables/StreamsService.html":{}}}],["sockets.map",{"_index":418,"title":{},"body":{"controllers/HandlersController.html":{}}}],["sockets.some",{"_index":453,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["software",{"_index":708,"title":{},"body":{"license.html":{}}}],["source",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"injectables/CommonService.html":{},"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"modules/HandlersModule.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"classes/UpdateHandlerDto.html":{},"classes/WsAdapter.html":{},"license.html":{}}}],["special",{"_index":806,"title":{},"body":{"license.html":{}}}],["specific",{"_index":343,"title":{},"body":{"controllers/HandlersController.html":{}}}],["specified",{"_index":403,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["src/.../main.ts",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/common.module.ts",{"_index":48,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/common.service.ts",{"_index":53,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/common/common.service.ts:10",{"_index":70,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/common/common.service.ts:7",{"_index":63,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/config/config.module.ts",{"_index":95,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/database/database.module.ts",{"_index":188,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/handlers/dto/create",{"_index":131,"title":{},"body":{"classes/CreateHandlerDto.html":{},"coverage.html":{}}}],["src/handlers/dto/update",{"_index":623,"title":{},"body":{"classes/UpdateHandlerDto.html":{},"coverage.html":{}}}],["src/handlers/entities/handler.entity.ts",{"_index":220,"title":{},"body":{"entities/Handler.html":{},"coverage.html":{}}}],["src/handlers/entities/handler.entity.ts:13",{"_index":235,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:22",{"_index":245,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:31",{"_index":248,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:40",{"_index":253,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:50",{"_index":256,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:59",{"_index":258,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:68",{"_index":261,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:79",{"_index":270,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:88",{"_index":275,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/entities/handler.entity.ts:98",{"_index":279,"title":{},"body":{"entities/Handler.html":{}}}],["src/handlers/handlers.controller.ts",{"_index":299,"title":{},"body":{"controllers/HandlersController.html":{},"coverage.html":{}}}],["src/handlers/handlers.controller.ts:117",{"_index":336,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.controller.ts:156",{"_index":350,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.controller.ts:193",{"_index":360,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.controller.ts:228",{"_index":366,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.controller.ts:68",{"_index":317,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.controller.ts:97",{"_index":328,"title":{},"body":{"controllers/HandlersController.html":{}}}],["src/handlers/handlers.gateway.ts",{"_index":433,"title":{},"body":{"classes/HandlersGateway.html":{},"coverage.html":{}}}],["src/handlers/handlers.gateway.ts:16",{"_index":440,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["src/handlers/handlers.gateway.ts:21",{"_index":438,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["src/handlers/handlers.gateway.ts:25",{"_index":442,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["src/handlers/handlers.module.ts",{"_index":464,"title":{},"body":{"modules/HandlersModule.html":{}}}],["src/handlers/handlers.service.ts",{"_index":467,"title":{},"body":{"injectables/HandlersService.html":{},"coverage.html":{}}}],["src/handlers/handlers.service.ts:15",{"_index":474,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:21",{"_index":477,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:66",{"_index":479,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:74",{"_index":481,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:78",{"_index":483,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:86",{"_index":484,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:90",{"_index":486,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/handlers.service.ts:96",{"_index":488,"title":{},"body":{"injectables/HandlersService.html":{}}}],["src/handlers/interfaces/handler",{"_index":293,"title":{},"body":{"interfaces/HandlerSocketData.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/streams/streams.controller.ts",{"_index":522,"title":{},"body":{"controllers/StreamsController.html":{},"coverage.html":{}}}],["src/streams/streams.controller.ts:115",{"_index":551,"title":{},"body":{"controllers/StreamsController.html":{}}}],["src/streams/streams.controller.ts:163",{"_index":556,"title":{},"body":{"controllers/StreamsController.html":{}}}],["src/streams/streams.controller.ts:208",{"_index":560,"title":{},"body":{"controllers/StreamsController.html":{}}}],["src/streams/streams.controller.ts:77",{"_index":540,"title":{},"body":{"controllers/StreamsController.html":{}}}],["src/streams/streams.module.ts",{"_index":585,"title":{},"body":{"modules/StreamsModule.html":{}}}],["src/streams/streams.service.ts",{"_index":588,"title":{},"body":{"injectables/StreamsService.html":{},"coverage.html":{}}}],["src/streams/streams.service.ts:12",{"_index":591,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/streams/streams.service.ts:15",{"_index":597,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/streams/streams.service.ts:23",{"_index":598,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/streams/streams.service.ts:31",{"_index":599,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/streams/streams.service.ts:39",{"_index":600,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/streams/streams.service.ts:48",{"_index":594,"title":{},"body":{"injectables/StreamsService.html":{}}}],["src/types/environment.ts",{"_index":210,"title":{},"body":{"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"coverage.html":{}}}],["src/websocket/websocket.adapter.ts",{"_index":629,"title":{},"body":{"classes/WsAdapter.html":{},"coverage.html":{}}}],["src/websocket/websocket.adapter.ts:6",{"_index":635,"title":{},"body":{"classes/WsAdapter.html":{}}}],["ssl",{"_index":201,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["started",{"_index":697,"title":{"license.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":569,"title":{},"body":{"controllers/StreamsController.html":{}}}],["stream",{"_index":530,"title":{},"body":{"controllers/StreamsController.html":{}}}],["stream'})@apinotfoundresponse({description",{"_index":545,"title":{},"body":{"controllers/StreamsController.html":{}}}],["stream'})@apiparam({description",{"_index":537,"title":{},"body":{"controllers/StreamsController.html":{}}}],["streamid",{"_index":543,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["streamid'})@delete(':streamid",{"_index":550,"title":{},"body":{"controllers/StreamsController.html":{}}}],["streamid'})@get(':streamid",{"_index":555,"title":{},"body":{"controllers/StreamsController.html":{}}}],["streamid'})@put(':streamid",{"_index":559,"title":{},"body":{"controllers/StreamsController.html":{}}}],["streamier",{"_index":699,"title":{},"body":{"license.html":{},"todo.html":{}}}],["streams",{"_index":535,"title":{},"body":{"controllers/StreamsController.html":{}}}],["streams.controller",{"_index":587,"title":{},"body":{"modules/StreamsModule.html":{}}}],["streams.service",{"_index":563,"title":{},"body":{"controllers/StreamsController.html":{},"modules/StreamsModule.html":{}}}],["streams/streams.module",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["streamscontroller",{"_index":521,"title":{"controllers/StreamsController.html":{}},"body":{"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"coverage.html":{}}}],["streamsmodule",{"_index":16,"title":{"modules/StreamsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StreamsModule.html":{},"index.html":{},"modules.html":{}}}],["streamsservice",{"_index":562,"title":{"injectables/StreamsService.html":{}},"body":{"controllers/StreamsController.html":{},"modules/StreamsModule.html":{},"injectables/StreamsService.html":{},"coverage.html":{},"index.html":{}}}],["string",{"_index":137,"title":{},"body":{"classes/CreateHandlerDto.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"interfaces/ProcessEnv.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["subject",{"_index":731,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":745,"title":{},"body":{"license.html":{}}}],["submissions",{"_index":768,"title":{},"body":{"license.html":{}}}],["success",{"_index":612,"title":{},"body":{"injectables/StreamsService.html":{}}}],["successfully",{"_index":310,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["successfully'})@apioperation({description",{"_index":546,"title":{},"body":{"controllers/StreamsController.html":{}}}],["such",{"_index":739,"title":{},"body":{"license.html":{}}}],["suggestions",{"_index":771,"title":{},"body":{"license.html":{}}}],["summary",{"_index":315,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["super.createioserver(port",{"_index":639,"title":{},"body":{"classes/WsAdapter.html":{}}}],["support",{"_index":846,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":847,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":203,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["t",{"_index":595,"title":{},"body":{"injectables/StreamsService.html":{}}}],["table",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":223,"title":{},"body":{"entities/Handler.html":{}}}],["terminates",{"_index":821,"title":{},"body":{"license.html":{}}}],["termination",{"_index":813,"title":{},"body":{"license.html":{}}}],["test",{"_index":874,"title":{},"body":{"todo.html":{}}}],["testing",{"_index":868,"title":{},"body":{"todo.html":{}}}],["tests",{"_index":855,"title":{},"body":{"todo.html":{}}}],["this._emittohandler(handlerid",{"_index":603,"title":{},"body":{"injectables/StreamsService.html":{}}}],["this.commonservice.getuseridfromrequest(request",{"_index":406,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["this.datasource.query",{"_index":89,"title":{},"body":{"injectables/CommonService.html":{}}}],["this.findone(id",{"_index":519,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.count",{"_index":494,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.delete",{"_index":511,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.exists",{"_index":499,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.find",{"_index":515,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.findone",{"_index":517,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.save(handler",{"_index":510,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlerrepository.save(updated",{"_index":520,"title":{},"body":{"injectables/HandlersService.html":{}}}],["this.handlersgateway",{"_index":414,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/StreamsService.html":{}}}],["this.handlersservice.createone(userid",{"_index":409,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.handlersservice.deleteone(id",{"_index":430,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.handlersservice.findall(userid",{"_index":411,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.handlersservice.findallusingauthtokens(authtokens",{"_index":420,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.handlersservice.findone(id",{"_index":426,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.handlersservice.findoneusingauthtoken(authtoken",{"_index":458,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["this.handlersservice.updateone(id",{"_index":432,"title":{},"body":{"controllers/HandlersController.html":{}}}],["this.server.fetchsockets",{"_index":452,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["this.streamsservice.createstream(handlerid",{"_index":571,"title":{},"body":{"controllers/StreamsController.html":{}}}],["this.streamsservice.deletestream(handlerid",{"_index":574,"title":{},"body":{"controllers/StreamsController.html":{}}}],["this.streamsservice.readstream(handlerid",{"_index":577,"title":{},"body":{"controllers/StreamsController.html":{}}}],["this.streamsservice.updatestream",{"_index":580,"title":{},"body":{"controllers/StreamsController.html":{}}}],["this.updatedat",{"_index":290,"title":{},"body":{"entities/Handler.html":{}}}],["throttlermodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":408,"title":{},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["time",{"_index":817,"title":{},"body":{"license.html":{}}}],["timestamp",{"_index":237,"title":{},"body":{"entities/Handler.html":{}}}],["todo",{"_index":852,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todo/fixme",{"_index":892,"title":{},"body":{"todo.html":{}}}],["token",{"_index":227,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["trademark",{"_index":756,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":727,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":183,"title":{},"body":{"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["true})@apinocontentresponse({description",{"_index":352,"title":{},"body":{"controllers/HandlersController.html":{}}}],["true})@apinotfoundresponse({description",{"_index":338,"title":{},"body":{"controllers/HandlersController.html":{}}}],["true})@apiokresponse({description",{"_index":320,"title":{},"body":{"controllers/HandlersController.html":{}}}],["true})@apioperation({description",{"_index":314,"title":{},"body":{"controllers/HandlersController.html":{}}}],["true})@column({default",{"_index":243,"title":{},"body":{"entities/Handler.html":{}}}],["true})@column({length",{"_index":232,"title":{},"body":{"entities/Handler.html":{}}}],["true})@isstring()@maxlength(100",{"_index":171,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["true})@isstring()@maxlength(12",{"_index":148,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["true})@isstring()@maxlength(180",{"_index":178,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["true})@isstring()@maxlength(5000",{"_index":165,"title":{},"body":{"classes/CreateHandlerDto.html":{}}}],["ts",{"_index":387,"title":{},"body":{"controllers/HandlersController.html":{},"dependencies.html":{}}}],["ttl",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["type",{"_index":66,"title":{},"body":{"injectables/CommonService.html":{},"classes/CreateHandlerDto.html":{},"modules/DatabaseModule.html":{},"interfaces/Environment.html":{},"entities/Handler.html":{},"interfaces/HandlerSocketData.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{},"classes/WsAdapter.html":{},"coverage.html":{}}}],["typeof",{"_index":613,"title":{},"body":{"injectables/StreamsService.html":{}}}],["typeorm",{"_index":76,"title":{},"body":{"injectables/CommonService.html":{},"entities/Handler.html":{},"injectables/HandlersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":189,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/HandlersModule.html":{}}}],["typeormmodule.forfeature([handler",{"_index":466,"title":{},"body":{"modules/HandlersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":191,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types",{"_index":627,"title":{},"body":{"classes/UpdateHandlerDto.html":{},"dependencies.html":{}}}],["types/environment",{"_index":100,"title":{},"body":{"modules/ConfigModule.html":{}}}],["u1234567",{"_index":278,"title":{},"body":{"entities/Handler.html":{}}}],["unauthorizedexception",{"_index":375,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["undefined",{"_index":263,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["undefined})@apiforbiddenresponse({description",{"_index":532,"title":{},"body":{"controllers/StreamsController.html":{}}}],["undefined})@apioperation({description",{"_index":322,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["undefined})@column({name",{"_index":267,"title":{},"body":{"entities/Handler.html":{}}}],["under",{"_index":786,"title":{},"body":{"license.html":{}}}],["unique",{"_index":234,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["unit",{"_index":854,"title":{},"body":{"todo.html":{}}}],["unknown",{"_index":449,"title":{},"body":{"classes/HandlersGateway.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["unused",{"_index":888,"title":{},"body":{"todo.html":{}}}],["up",{"_index":862,"title":{},"body":{"todo.html":{}}}],["update",{"_index":307,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["update(id",{"_index":361,"title":{},"body":{"controllers/HandlersController.html":{}}}],["updated",{"_index":272,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{}}}],["updated_at",{"_index":274,"title":{},"body":{"entities/Handler.html":{}}}],["updatedat",{"_index":224,"title":{},"body":{"entities/Handler.html":{},"controllers/StreamsController.html":{}}}],["updatehandlerdto",{"_index":362,"title":{"classes/UpdateHandlerDto.html":{}},"body":{"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"classes/UpdateHandlerDto.html":{},"coverage.html":{}}}],["updateone",{"_index":471,"title":{},"body":{"injectables/HandlersService.html":{}}}],["updateone(id",{"_index":487,"title":{},"body":{"injectables/HandlersService.html":{}}}],["updates",{"_index":363,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["updatestream",{"_index":527,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["updatestream(handlerid",{"_index":557,"title":{},"body":{"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["updatetimestamp",{"_index":288,"title":{},"body":{"entities/Handler.html":{}}}],["use",{"_index":707,"title":{},"body":{"license.html":{}}}],["used",{"_index":152,"title":{},"body":{"classes/CreateHandlerDto.html":{},"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["usefactory",{"_index":192,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["user",{"_index":276,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["user's",{"_index":326,"title":{},"body":{"controllers/HandlersController.html":{}}}],["user_id",{"_index":91,"title":{},"body":{"injectables/CommonService.html":{},"entities/Handler.html":{}}}],["userid",{"_index":225,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{},"injectables/HandlersService.html":{},"controllers/StreamsController.html":{},"injectables/StreamsService.html":{}}}],["username",{"_index":206,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["v1.0",{"_index":701,"title":{},"body":{"license.html":{}}}],["valid",{"_index":112,"title":{},"body":{"modules/ConfigModule.html":{},"classes/CreateHandlerDto.html":{}}}],["valid(\"development",{"_index":124,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validationschema",{"_index":102,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validator",{"_index":182,"title":{},"body":{"classes/CreateHandlerDto.html":{},"controllers/HandlersController.html":{},"classes/HandlersGateway.html":{},"dependencies.html":{}}}],["verify",{"_index":117,"title":{},"body":{"modules/ConfigModule.html":{},"interfaces/Environment.html":{},"interfaces/ProcessEnv.html":{},"todo.html":{}}}],["version",{"_index":850,"title":{},"body":{"properties.html":{}}}],["view",{"_index":553,"title":{},"body":{"controllers/StreamsController.html":{},"license.html":{}}}],["viewing",{"_index":811,"title":{},"body":{"license.html":{}}}],["violation",{"_index":819,"title":{},"body":{"license.html":{}}}],["violations",{"_index":826,"title":{},"body":{"license.html":{}}}],["void",{"_index":289,"title":{},"body":{"entities/Handler.html":{}}}],["waive",{"_index":779,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":794,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":791,"title":{},"body":{"license.html":{}}}],["websocket",{"_index":228,"title":{},"body":{"entities/Handler.html":{},"controllers/HandlersController.html":{}}}],["websocketgateway",{"_index":445,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["websocketserver",{"_index":439,"title":{},"body":{"classes/HandlersGateway.html":{}}}],["without",{"_index":793,"title":{},"body":{"license.html":{}}}],["works",{"_index":748,"title":{},"body":{"license.html":{}}}],["write",{"_index":853,"title":{},"body":{"todo.html":{}}}],["wsadapter",{"_index":628,"title":{"classes/WsAdapter.html":{}},"body":{"classes/WsAdapter.html":{},"coverage.html":{}}}],["x",{"_index":313,"title":{},"body":{"controllers/HandlersController.html":{},"controllers/StreamsController.html":{}}}],["yes",{"_index":636,"title":{},"body":{"classes/WsAdapter.html":{}}}],["zoom",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/HandlersModule.html":{},"modules/StreamsModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHandlersModule\n\nHandlersModule\n\nAppModule -->\n\nHandlersModule->AppModule\n\n\n\n\n\nStreamsModule\n\nStreamsModule\n\nAppModule -->\n\nStreamsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            HandlersModule\n                        \n                        \n                            StreamsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ThrottlerModule } from \"@nestjs/throttler\";\n\nimport { CommonModule } from \"./common/common.module\";\nimport { ConfigModule } from \"./config/config.module\";\nimport { DatabaseModule } from \"./database/database.module\";\nimport { HandlersModule } from \"./handlers/handlers.module\";\nimport { StreamsModule } from \"./streams/streams.module\";\n\n@Module({\n  imports: [\n    ConfigModule,\n    DatabaseModule,\n    ThrottlerModule.forRoot({\n      throttlers: [\n        {\n          limit: 20,\n          ttl: 60000,\n        },\n      ],\n    }),\n    HandlersModule,\n    StreamsModule,\n    CommonModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nCommonService \n\nCommonService \n\n\n\nCommonModule\n\nCommonModule\n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CommonService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CommonService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\n\nimport { CommonService } from \"./common.service\";\n\n@Global()\n@Module({\n  exports: [CommonService],\n  providers: [CommonService],\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getUserIdFromRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(dataSource: DataSource)\n                    \n                \n                        \n                            \n                                Defined in src/common/common.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataSource\n                                                  \n                                                        \n                                                                    DataSource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getUserIdFromRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserIdFromRequest(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/common.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { isString } from \"radash\";\nimport { DataSource } from \"typeorm\";\n\n@Injectable()\nexport class CommonService {\n  public constructor(private readonly dataSource: DataSource) {}\n\n  public async getUserIdFromRequest(request: Request): Promise {\n    const sessionId = request.headers[\"x-session-id\"];\n\n    if (!isString(sessionId)) {\n      return null;\n    }\n\n    const result = await this.dataSource.query(\n      \"SELECT user_id FROM sessions WHERE id = $1\",\n      [sessionId],\n    );\n\n    return result[0]?.user_id ?? null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ConfigModule as NestConfigModule } from \"@nestjs/config\";\nimport Joi from \"joi\";\n\nimport { Environment } from \"../types/environment\";\n\n@Module({\n  exports: [NestConfigModule],\n  imports: [\n    NestConfigModule.forRoot({\n      validationSchema: Joi.object({\n        DB_HOST: Joi.string().hostname().default(\"localhost\"),\n        DB_NAME: Joi.string(),\n        DB_PASSWORD: Joi.string(),\n        DB_PORT: Joi.number().port().default(5432),\n        DB_SSL_MODE: Joi.string()\n          .valid(\n            \"allow\",\n            \"disable\",\n            \"prefer\",\n            \"require\",\n            \"verify-ca\",\n            \"verify-full\",\n          )\n          .default(\"disable\"),\n        DB_USER: Joi.string().default(\"postgres\"),\n        NODE_ENV: Joi.string()\n          .valid(\"development\", \"production\")\n          .default(\"development\"),\n        PORT: Joi.number().port().default(3000),\n      }),\n    }),\n  ],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHandlerDto.html":{"url":"classes/CreateHandlerDto.html","title":"class - CreateHandlerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHandlerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/dto/create-handler.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                iconId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                longDescription\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                shortDescription\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        iconId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the handler icon from icons8.com. Must be a valid icon ID.', example: '000000', maxLength: 12, required: true})@IsString()@MaxLength(12)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/dto/create-handler.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The long description of the handler. Used for detailed documentation of the handler's functionality.', example: 'This handler is used for developing Discord bots. It allows you to create and manage Discord bots with ease.', maxLength: 5000, required: true})@IsString()@MaxLength(5000)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/dto/create-handler.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The display name of the handler. Should be descriptive but concise.', example: 'Discord (Bots)', maxLength: 100, required: true})@IsString()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/dto/create-handler.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A brief description of the handler's purpose. Used in listings and previews.', example: 'Create and manage Discord bots', maxLength: 180, required: true})@IsString()@MaxLength(180)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/dto/create-handler.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, MaxLength } from \"class-validator\";\n\nexport class CreateHandlerDto {\n  @ApiProperty({\n    description:\n      \"The ID of the handler icon from icons8.com. Must be a valid icon ID.\",\n    example: \"000000\",\n    maxLength: 12,\n    required: true,\n  })\n  @IsString()\n  @MaxLength(12)\n  public iconId!: string;\n\n  @ApiProperty({\n    description:\n      \"The long description of the handler. Used for detailed documentation of the handler's functionality.\",\n    example:\n      \"This handler is used for developing Discord bots. It allows you to create and manage Discord bots with ease.\",\n    maxLength: 5000,\n    required: true,\n  })\n  @IsString()\n  @MaxLength(5000)\n  public longDescription!: string;\n\n  @ApiProperty({\n    description:\n      \"The display name of the handler. Should be descriptive but concise.\",\n    example: \"Discord (Bots)\",\n    maxLength: 100,\n    required: true,\n  })\n  @IsString()\n  @MaxLength(100)\n  public name!: string;\n\n  @ApiProperty({\n    description:\n      \"A brief description of the handler's purpose. Used in listings and previews.\",\n    example: \"Create and manage Discord bots\",\n    maxLength: 180,\n    required: true,\n  })\n  @IsString()\n  @MaxLength(180)\n  public shortDescription!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\n@Module({\n  exports: [TypeOrmModule],\n  imports: [\n    TypeOrmModule.forRootAsync({\n      useFactory: () => ({\n        autoLoadEntities: true,\n        database: process.env.DB_NAME,\n        host: process.env.DB_HOST,\n        password: process.env.DB_PASSWORD,\n        port: process.env.DB_PORT,\n        ssl: process.env.DB_SSL_MODE === \"require\",\n        synchronize: process.env.NODE_ENV !== \"production\",\n        type: \"postgres\",\n        username: process.env.DB_USER,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Environment.html":{"url":"interfaces/Environment.html","title":"interface - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/environment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            DB_HOST\n                                        \n                                \n                                \n                                        \n                                            DB_NAME\n                                        \n                                \n                                \n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_PORT\n                                        \n                                \n                                \n                                        \n                                            DB_SSL_MODE\n                                        \n                                \n                                \n                                        \n                                            DB_USER\n                                        \n                                \n                                \n                                        \n                                            NODE_ENV\n                                        \n                                \n                                \n                                        \n                                            PORT\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_HOST\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_HOST:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_NAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_NAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_SSL_MODE\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_SSL_MODE:     \"allow\" | \"disable\" | \"prefer\" | \"require\" | \"verify-ca\" | \"verify-full\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"allow\" | \"disable\" | \"prefer\" | \"require\" | \"verify-ca\" | \"verify-full\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USER\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USER:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NODE_ENV\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        NODE_ENV:     \"development\" | \"production\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"development\" | \"production\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PORT\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        PORT:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Environment {\n  DB_HOST: string;\n  DB_NAME: string;\n  DB_PASSWORD: string;\n  DB_PORT: number;\n  DB_SSL_MODE:\n    | \"allow\"\n    | \"disable\"\n    | \"prefer\"\n    | \"require\"\n    | \"verify-ca\"\n    | \"verify-full\";\n  DB_USER: string;\n  NODE_ENV: \"development\" | \"production\";\n  PORT: number;\n}\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv extends Environment {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Handler.html":{"url":"entities/Handler.html","title":"entity - Handler","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Handler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/entities/handler.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                authToken\n                            \n                            \n                                    \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    Public\n                                iconId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                longDescription\n                            \n                            \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    \n                                    Public\n                                shortDescription\n                            \n                            \n                                    \n                                    \n                                    Public\n                                tags\n                            \n                            \n                                    \n                                    \n                                    Public\n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        authToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Authentication token used for WebSocket connections', example: 'abc123def456', name: 'auth_token', readOnly: true})@Column({length: 64, name: 'auth_token', unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when the handler was created', example: '2024-04-01T12:00:00Z', name: 'created_at', readOnly: true})@Column({default: () => CURRENT_TIMESTAMP, name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        iconId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the handler icon from icons8.com', example: '000000', maxLength: 12, name: 'icon_id'})@Column({length: 12, name: 'icon_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique identifier for the handler', example: 'h1234567', maxLength: 8, name: 'id'})@PrimaryColumn({length: 8, name: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        longDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Detailed description of the handler's functionality.', example: 'This handler is used for developing Discord bots. It allows you to create and manage Discord bots with ease.', maxLength: 5000, name: 'long_description'})@Column({length: 5000, name: 'long_description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Display name of the handler', example: 'Discord (Bots)', maxLength: 100, name: 'name'})@Column({length: 100, name: 'name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        shortDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Brief description of the handler's purpose', example: 'Create and manage Discord bots', maxLength: 180, name: 'short_description'})@Column({length: 180, name: 'short_description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Tags associated with the handler ', example: undefined, maxItems: 10, maxLength: 30, name: 'tags', type: undefined})@Column({name: 'tags', type: 'simple-array'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when the handler was last updated', example: '2024-04-01T12:30:00Z', name: 'updated_at', readOnly: true})@Column({default: () => CURRENT_TIMESTAMP, name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ID of the user who owns this handler', example: 'u1234567', maxLength: 8, name: 'user_id', readOnly: true})@Column({length: 8, name: 'user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/entities/handler.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { BeforeUpdate, Column, Entity, PrimaryColumn } from \"typeorm\";\n\n@Entity({ name: \"handlers\" })\nexport class Handler {\n  @ApiProperty({\n    description: \"Authentication token used for WebSocket connections\",\n    example: \"abc123def456\",\n    name: \"auth_token\",\n    readOnly: true,\n  })\n  @Column({ length: 64, name: \"auth_token\", unique: true })\n  public authToken!: string;\n\n  @ApiProperty({\n    description: \"Timestamp when the handler was created\",\n    example: \"2024-04-01T12:00:00Z\",\n    name: \"created_at\",\n    readOnly: true,\n  })\n  @Column({ default: () => \"CURRENT_TIMESTAMP\", name: \"created_at\" })\n  public createdAt!: Date;\n\n  @ApiProperty({\n    description: \"The ID of the handler icon from icons8.com\",\n    example: \"000000\",\n    maxLength: 12,\n    name: \"icon_id\",\n  })\n  @Column({ length: 12, name: \"icon_id\" })\n  public iconId!: string;\n\n  @ApiProperty({\n    description: \"Unique identifier for the handler\",\n    example: \"h1234567\",\n    maxLength: 8,\n    name: \"id\",\n  })\n  @PrimaryColumn({ length: 8, name: \"id\" })\n  public id!: string;\n\n  @ApiProperty({\n    description: \"Detailed description of the handler's functionality.\",\n    example:\n      \"This handler is used for developing Discord bots. It allows you to create and manage Discord bots with ease.\",\n    maxLength: 5000,\n    name: \"long_description\",\n  })\n  @Column({ length: 5000, name: \"long_description\" })\n  public longDescription!: string;\n\n  @ApiProperty({\n    description: \"Display name of the handler\",\n    example: \"Discord (Bots)\",\n    maxLength: 100,\n    name: \"name\",\n  })\n  @Column({ length: 100, name: \"name\" })\n  public name!: string;\n\n  @ApiProperty({\n    description: \"Brief description of the handler's purpose\",\n    example: \"Create and manage Discord bots\",\n    maxLength: 180,\n    name: \"short_description\",\n  })\n  @Column({ length: 180, name: \"short_description\" })\n  public shortDescription!: string;\n\n  @ApiProperty({\n    description: \"Tags associated with the handler \",\n    example: [\"discord\", \"bot\", \"automation\"],\n    maxItems: 10,\n    maxLength: 30,\n    name: \"tags\",\n    type: [String],\n  })\n  @Column({ name: \"tags\", type: \"simple-array\" })\n  public tags!: string[];\n\n  @ApiProperty({\n    description: \"Timestamp when the handler was last updated\",\n    example: \"2024-04-01T12:30:00Z\",\n    name: \"updated_at\",\n    readOnly: true,\n  })\n  @Column({ default: () => \"CURRENT_TIMESTAMP\", name: \"updated_at\" })\n  public updatedAt!: Date;\n\n  @ApiProperty({\n    description: \"ID of the user who owns this handler\",\n    example: \"u1234567\",\n    maxLength: 8,\n    name: \"user_id\",\n    readOnly: true,\n  })\n  @Column({ length: 8, name: \"user_id\" })\n  public userId!: string;\n\n  @BeforeUpdate()\n  public updateTimestamp(): void {\n    this.updatedAt = new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerSocketData.html":{"url":"interfaces/HandlerSocketData.html","title":"interface - HandlerSocketData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HandlerSocketData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/interfaces/handler-socket-data.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HandlerSocketData {\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HandlersController.html":{"url":"controllers/HandlersController.html","title":"controller - HandlersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HandlersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/handlers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/handlers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                findAllActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(createHandlerDto: CreateHandlerDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Handler successfully created', type: Handler})@ApiHeader({description: 'Session ID for authentication', example: '1234567890', name: 'X-Session-Id', required: true})@ApiOperation({description: undefined, summary: 'Create a new handler'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createHandlerDto\n                                            \n                                                            CreateHandlerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({description: 'Session ID for authentication', example: '1234567890', name: 'X-Session-Id', required: true})@ApiOkResponse({description: 'List of all handlers for the user', type: undefined})@ApiOperation({description: 'Retrieves a list of all handlers belonging to the authenticated user.', summary: 'Get user's handlers'})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        findAllActive\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllActive()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'List of all active handlers', type: undefined})@ApiOperation({description: 'Retrieves a list of all currently active handlers. This endpoint is publicly accessible and does not require authentication.', summary: 'Get active handlers'})@Get('active/list')\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({description: 'Session ID for authentication', example: '1234567890', name: 'X-Session-Id', required: true})@ApiNotFoundResponse({description: 'Handler not found'})@ApiOkResponse({description: 'Handler details', type: Handler})@ApiOperation({description: 'Retrieves detailed information about a specific handler. If the handler belongs to the authenticated user, the authentication token will be included in the response.', summary: 'Get handler details'})@ApiParam({description: 'The ID of the handler to retrieve', example: 'h1234567', name: 'id'})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({description: 'Session ID for authentication', example: '1234567890', name: 'X-Session-Id', required: true})@ApiNoContentResponse({description: 'Handler successfully deleted'})@ApiNotFoundResponse({description: 'Handler not found'})@ApiOperation({description: 'Deletes a specific handler. Only handlers belonging to the authenticated user can be deleted.', summary: 'Delete handler'})@ApiParam({description: 'The ID of the handler to delete', example: 'h1234567', name: 'id'})@Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateHandlerDto: UpdateHandlerDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiHeader({description: 'Session ID for authentication', example: '1234567890', name: 'X-Session-Id', required: true})@ApiNotFoundResponse({description: 'Handler not found'})@ApiOkResponse({description: 'Handler successfully updated', type: Handler})@ApiOperation({description: 'Updates the configuration of a specific handler. Only handlers belonging to the authenticated user can be updated.', summary: 'Update handler'})@ApiParam({description: 'The ID of the handler to update', example: 'h1234567', name: 'id'})@Put(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/handlers/handlers.controller.ts:228\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateHandlerDto\n                                            \n                                                            UpdateHandlerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  Post,\n  Put,\n  Req,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiHeader,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from \"@nestjs/swagger\";\nimport { isString } from \"class-validator\";\nimport { Request } from \"express\";\nimport { dedent } from \"ts-dedent\";\n\nimport { CommonService } from \"../common/common.service\";\nimport { CreateHandlerDto } from \"./dto/create-handler.dto\";\nimport { UpdateHandlerDto } from \"./dto/update-handler.dto\";\nimport { Handler } from \"./entities/handler.entity\";\nimport { HandlersGateway } from \"./handlers.gateway\";\nimport { HandlersService } from \"./handlers.service\";\n\n@ApiBadRequestResponse({ description: \"Invalid request parameters or body\" })\n@ApiTags(\"Handlers\")\n@ApiUnauthorizedResponse({ description: \"Missing or invalid authentication\" })\n@Controller(\"api/handlers\")\nexport class HandlersController {\n  public constructor(\n    private readonly handlersService: HandlersService,\n    private readonly handlersGateway: HandlersGateway,\n    private readonly commonService: CommonService,\n  ) {}\n\n  @ApiCreatedResponse({\n    description: \"Handler successfully created\",\n    type: Handler,\n  })\n  @ApiHeader({\n    description: \"Session ID for authentication\",\n    example: \"1234567890\",\n    name: \"X-Session-Id\",\n    required: true,\n  })\n  @ApiOperation({\n    description: dedent`\n    Creates a new handler with the specified configuration.\n\n    The handler will be associated with the authenticated user and will be assigned a unique ID and authentication token.\n    The authentication token can be used to establish WebSocket connections to the handler.`,\n    summary: \"Create a new handler\",\n  })\n  @Post()\n  public async createOne(\n    @Body() createHandlerDto: CreateHandlerDto,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.handlersService.createOne(userId, createHandlerDto);\n  }\n\n  @ApiHeader({\n    description: \"Session ID for authentication\",\n    example: \"1234567890\",\n    name: \"X-Session-Id\",\n    required: true,\n  })\n  @ApiOkResponse({\n    description: \"List of all handlers for the user\",\n    type: [Handler],\n  })\n  @ApiOperation({\n    description:\n      \"Retrieves a list of all handlers belonging to the authenticated user.\",\n    summary: \"Get user's handlers\",\n  })\n  @Get()\n  public async findAll(@Req() request: Request): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.handlersService.findAll(userId);\n  }\n\n  @ApiOkResponse({\n    description: \"List of all active handlers\",\n    type: [Handler],\n  })\n  @ApiOperation({\n    description:\n      \"Retrieves a list of all currently active handlers. This endpoint is publicly accessible and does not require authentication.\",\n    summary: \"Get active handlers\",\n  })\n  @Get(\"active/list\")\n  public async findAllActive(): Promise[]\n  > {\n    const { server } = this.handlersGateway;\n\n    const sockets = await server.fetchSockets();\n\n    const authTokens = sockets.map(\n      (socket) => socket.handshake.auth.token as string,\n    );\n\n    const handlers =\n      await this.handlersService.findAllUsingAuthTokens(authTokens);\n\n    return handlers.map(({ authToken, ...handler }) => handler);\n  }\n\n  @ApiHeader({\n    description: \"Session ID for authentication\",\n    example: \"1234567890\",\n    name: \"X-Session-Id\",\n    required: true,\n  })\n  @ApiNotFoundResponse({ description: \"Handler not found\" })\n  @ApiOkResponse({\n    description: \"Handler details\",\n    type: Handler,\n  })\n  @ApiOperation({\n    description:\n      \"Retrieves detailed information about a specific handler. If the handler belongs to the authenticated user, the authentication token will be included in the response.\",\n    summary: \"Get handler details\",\n  })\n  @ApiParam({\n    description: \"The ID of the handler to retrieve\",\n    example: \"h1234567\",\n    name: \"id\",\n  })\n  @Get(\":id\")\n  public async findOne(\n    @Param(\"id\") id: string,\n    @Req() request: Request,\n  ): Promise> {\n    const h = await this.handlersService.findOne(id);\n\n    if (!h) {\n      throw new NotFoundException();\n    }\n\n    const { authToken, ...handler } = h;\n\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    return { ...handler, ...(handler.userId === userId && { authToken }) };\n  }\n\n  @ApiHeader({\n    description: \"Session ID for authentication\",\n    example: \"1234567890\",\n    name: \"X-Session-Id\",\n    required: true,\n  })\n  @ApiNoContentResponse({ description: \"Handler successfully deleted\" })\n  @ApiNotFoundResponse({ description: \"Handler not found\" })\n  @ApiOperation({\n    description:\n      \"Deletes a specific handler. Only handlers belonging to the authenticated user can be deleted.\",\n    summary: \"Delete handler\",\n  })\n  @ApiParam({\n    description: \"The ID of the handler to delete\",\n    example: \"h1234567\",\n    name: \"id\",\n  })\n  @Delete(\":id\")\n  @HttpCode(HttpStatus.NO_CONTENT)\n  public async remove(\n    @Param(\"id\") id: string,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    await this.handlersService.deleteOne(id);\n  }\n\n  @ApiHeader({\n    description: \"Session ID for authentication\",\n    example: \"1234567890\",\n    name: \"X-Session-Id\",\n    required: true,\n  })\n  @ApiNotFoundResponse({ description: \"Handler not found\" })\n  @ApiOkResponse({\n    description: \"Handler successfully updated\",\n    type: Handler,\n  })\n  @ApiOperation({\n    description:\n      \"Updates the configuration of a specific handler. Only handlers belonging to the authenticated user can be updated.\",\n    summary: \"Update handler\",\n  })\n  @ApiParam({\n    description: \"The ID of the handler to update\",\n    example: \"h1234567\",\n    name: \"id\",\n  })\n  @Put(\":id\")\n  public async update(\n    @Param(\"id\") id: string,\n    @Body() updateHandlerDto: UpdateHandlerDto,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.handlersService.updateOne(id, updateHandlerDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlersGateway.html":{"url":"classes/HandlersGateway.html","title":"class - HandlersGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlersGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/handlers.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        OnGatewayConnection\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handleConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(handlersService: HandlersService)\n                    \n                \n                        \n                            \n                                Defined in src/handlers/handlers.gateway.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlersService\n                                                  \n                                                        \n                                                                        HandlersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/handlers/handlers.gateway.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleConnection(socket: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.gateway.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                socket\n                                            \n                                                            Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { DefaultEventsMap, Server, Socket } from \"socket.io\";\n\nimport {\n  OnGatewayConnection,\n  WebSocketGateway,\n  WebSocketServer,\n} from \"@nestjs/websockets\";\nimport { isString } from \"class-validator\";\n\nimport { HandlersService } from \"./handlers.service\";\nimport { HandlerSocketData } from \"./interfaces/handler-socket-data.interface\";\n\n@WebSocketGateway({ namespace: \"handlers\" })\nexport class HandlersGateway implements OnGatewayConnection {\n  @WebSocketServer()\n  public server!: Server;\n\n  public constructor(private readonly handlersService: HandlersService) {}\n\n  public async handleConnection(\n    socket: Socket,\n  ): Promise {\n    const authToken = socket.handshake.auth.token as unknown;\n\n    if (!isString(authToken)) {\n      socket.disconnect(true);\n\n      return;\n    }\n\n    const sockets = await this.server.fetchSockets();\n\n    if (\n      sockets.some(\n        (s) => s.handshake.auth.token === authToken && s.id !== socket.id,\n      )\n    ) {\n      socket.disconnect(true);\n\n      return;\n    }\n\n    const handler = await this.handlersService.findOneUsingAuthToken(authToken);\n\n    if (!handler) {\n      socket.disconnect(true);\n\n      return;\n    }\n\n    socket.data.id = handler.id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandlersModule.html":{"url":"modules/HandlersModule.html","title":"module - HandlersModule","body":"\n                   \n\n\n\n\n    Modules\n    HandlersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HandlersModule\n\n\n\ncluster_HandlersModule_exports\n\n\n\ncluster_HandlersModule_providers\n\n\n\n\nHandlersService \n\nHandlersService \n\n\n\nHandlersModule\n\nHandlersModule\n\nHandlersService  -->\n\nHandlersModule->HandlersService \n\n\n\n\n\nHandlersService\n\nHandlersService\n\nHandlersModule -->\n\nHandlersService->HandlersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/handlers/handlers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HandlersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HandlersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandlersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TypeOrmModule } from \"@nestjs/typeorm\";\n\nimport { Handler } from \"./entities/handler.entity\";\nimport { HandlersController } from \"./handlers.controller\";\nimport { HandlersGateway } from \"./handlers.gateway\";\nimport { HandlersService } from \"./handlers.service\";\n\n@Module({\n  controllers: [HandlersController],\n  exports: [HandlersService],\n  imports: [TypeOrmModule.forFeature([Handler])],\n  providers: [HandlersService, HandlersGateway],\n})\nexport class HandlersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlersService.html":{"url":"injectables/HandlersService.html","title":"injectable - HandlersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandlersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/handlers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createOne\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findAllUsingAuthTokens\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                findOneUsingAuthToken\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(handlerRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/handlers/handlers.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOne(userId: string, createHandlerDto: CreateHandlerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createHandlerDto\n                                            \n                                                            CreateHandlerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllUsingAuthTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsingAuthTokens(authTokens: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authTokens\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOneUsingAuthToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneUsingAuthToken(authToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(id: string, updateHandlerDto: UpdateHandlerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/handlers/handlers.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateHandlerDto\n                                            \n                                                            UpdateHandlerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from \"@nestjs/common\";\nimport { InjectRepository } from \"@nestjs/typeorm\";\nimport randomatic from \"randomatic\";\nimport { In, Repository } from \"typeorm\";\n\nimport { CreateHandlerDto } from \"./dto/create-handler.dto\";\nimport { UpdateHandlerDto } from \"./dto/update-handler.dto\";\nimport { Handler } from \"./entities/handler.entity\";\n\n@Injectable()\nexport class HandlersService {\n  public constructor(\n    @InjectRepository(Handler)\n    private readonly handlerRepository: Repository,\n  ) {}\n\n  public async createOne(\n    userId: string,\n    createHandlerDto: CreateHandlerDto,\n  ): Promise {\n    const count = await this.handlerRepository.count({ where: { userId } });\n\n    const maxHandlersPerUser = 10;\n\n    if (count >= maxHandlersPerUser) {\n      throw new BadRequestException(\n        `Maximum number of handlers (${maxHandlersPerUser}) reached`,\n      );\n    }\n\n    const handler = new Handler();\n\n    let id: string;\n\n    let authToken: string;\n\n    do {\n      id = randomatic(\"a0\", 8);\n    } while (await this.handlerRepository.exists({ where: { id } }));\n\n    do {\n      authToken = randomatic(\"Aa0\", 64);\n    } while (await this.handlerRepository.exists({ where: { authToken } }));\n\n    handler.id = id;\n\n    handler.name = createHandlerDto.name;\n\n    handler.shortDescription = createHandlerDto.shortDescription;\n\n    handler.longDescription = createHandlerDto.longDescription;\n\n    handler.iconId = createHandlerDto.iconId;\n\n    handler.authToken = authToken;\n\n    handler.userId = userId;\n\n    return this.handlerRepository.save(handler);\n  }\n\n  public async deleteOne(id: string): Promise {\n    const result = await this.handlerRepository.delete({ id });\n\n    if (result.affected === 0) {\n      throw new NotFoundException(\"Handler not found\");\n    }\n  }\n\n  public async findAll(userId: string): Promise {\n    return this.handlerRepository.find({ where: { userId } });\n  }\n\n  public async findAllUsingAuthTokens(\n    authTokens: string[],\n  ): Promise {\n    return this.handlerRepository.find({\n      where: { authToken: In(authTokens) },\n    });\n  }\n\n  public async findOne(id: string): Promise {\n    return this.handlerRepository.findOne({ where: { id } });\n  }\n\n  public async findOneUsingAuthToken(\n    authToken: string,\n  ): Promise {\n    return this.handlerRepository.findOne({ where: { authToken } });\n  }\n\n  public async updateOne(\n    id: string,\n    updateHandlerDto: UpdateHandlerDto,\n  ): Promise {\n    const existing = await this.findOne(id);\n\n    const updated = { ...existing, ...updateHandlerDto };\n\n    return this.handlerRepository.save(updated);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProcessEnv.html":{"url":"interfaces/ProcessEnv.html","title":"interface - ProcessEnv","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProcessEnv\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/environment.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Environment {\n  DB_HOST: string;\n  DB_NAME: string;\n  DB_PASSWORD: string;\n  DB_PORT: number;\n  DB_SSL_MODE:\n    | \"allow\"\n    | \"disable\"\n    | \"prefer\"\n    | \"require\"\n    | \"verify-ca\"\n    | \"verify-full\";\n  DB_USER: string;\n  NODE_ENV: \"development\" | \"production\";\n  PORT: number;\n}\n\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv extends Environment {}\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StreamsController.html":{"url":"controllers/StreamsController.html","title":"controller - StreamsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StreamsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/streams/streams.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/streams/:handlerId\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                createStream\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteStream\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readStream\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateStream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        createStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStream(data, handlerId: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse({description: 'Stream created successfully', schema: undefined})@ApiForbiddenResponse({description: 'User doesn't have permission to create streams on this handler'})@ApiNotFoundResponse({description: 'Handler not found'})@ApiOperation({description: 'Creates a new stream associated with the specified handler', summary: 'Create a new stream'})@ApiParam({description: 'ID of the handler to create the stream on', example: 'handler-123', name: 'handlerId'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/streams/streams.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        deleteStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStream(handlerId: string, streamId: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiForbiddenResponse({description: 'User doesn't have permission to delete this stream'})@ApiNotFoundResponse({description: 'Handler or stream not found'})@ApiOkResponse({description: 'Stream deleted successfully'})@ApiOperation({description: 'Deletes the specified stream from the handler', summary: 'Delete a stream'})@ApiParam({description: 'ID of the handler containing the stream', example: 'handler-123', name: 'handlerId'})@ApiParam({description: 'ID of the stream to delete', example: 'stream-456', name: 'streamId'})@Delete(':streamId')\n                \n            \n\n                    \n                        \n                            Defined in src/streams/streams.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    readStream(handlerId: string, streamId: string, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiForbiddenResponse({description: 'User doesn't have permission to view this stream'})@ApiNotFoundResponse({description: 'Handler or stream not found'})@ApiOkResponse({description: 'Stream details retrieved successfully', schema: undefined})@ApiOperation({description: 'Retrieves details about the specified stream', summary: 'Get stream details'})@ApiParam({description: 'ID of the handler containing the stream', example: 'handler-123', name: 'handlerId'})@ApiParam({description: 'ID of the stream to retrieve', example: 'stream-456', name: 'streamId'})@Get(':streamId')\n                \n            \n\n                    \n                        \n                            Defined in src/streams/streams.controller.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStream(handlerId: string, streamId: string, changes, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiForbiddenResponse({description: 'User doesn't have permission to update this stream'})@ApiNotFoundResponse({description: 'Handler or stream not found'})@ApiOkResponse({description: 'Stream updated successfully', schema: undefined})@ApiOperation({description: 'Updates configuration of the specified stream', summary: 'Update a stream'})@ApiParam({description: 'ID of the handler containing the stream', example: 'handler-123', name: 'handlerId'})@ApiParam({description: 'ID of the stream to update', example: 'stream-456', name: 'streamId'})@Put(':streamId')\n                \n            \n\n                    \n                        \n                            Defined in src/streams/streams.controller.ts:208\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Req,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiHeader,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from \"@nestjs/swagger\";\nimport { Request } from \"express\";\nimport { isString } from \"radash\";\n\nimport { CommonService } from \"../common/common.service\";\nimport { StreamsService } from \"./streams.service\";\n\n@ApiBadRequestResponse({\n  description: \"Invalid request parameters or body\",\n})\n@ApiHeader({\n  description: \"Session ID for authentication\",\n  example: \"1234567890\",\n  name: \"X-Session-Id\",\n  required: true,\n})\n@ApiTags(\"Streams\")\n@ApiUnauthorizedResponse({\n  description: \"Missing or invalid authentication\",\n})\n@Controller(\"api/streams/:handlerId\")\nexport class StreamsController {\n  public constructor(\n    private readonly streamsService: StreamsService,\n    private readonly commonService: CommonService,\n  ) {}\n\n  @ApiCreatedResponse({\n    description: \"Stream created successfully\",\n    schema: {\n      example: {\n        createdAt: \"2023-01-01T00:00:00Z\",\n        id: \"stream-456\",\n        status: \"active\",\n      },\n    },\n  })\n  @ApiForbiddenResponse({\n    description:\n      \"User doesn't have permission to create streams on this handler\",\n  })\n  @ApiNotFoundResponse({\n    description: \"Handler not found\",\n  })\n  @ApiOperation({\n    description: \"Creates a new stream associated with the specified handler\",\n    summary: \"Create a new stream\",\n  })\n  @ApiParam({\n    description: \"ID of the handler to create the stream on\",\n    example: \"handler-123\",\n    name: \"handlerId\",\n  })\n  @Post()\n  public async createStream(\n    @Body() data: unknown,\n    @Param(\"handlerId\") handlerId: string,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.streamsService.createStream(handlerId, userId, data);\n  }\n\n  @ApiForbiddenResponse({\n    description: \"User doesn't have permission to delete this stream\",\n  })\n  @ApiNotFoundResponse({\n    description: \"Handler or stream not found\",\n  })\n  @ApiOkResponse({\n    description: \"Stream deleted successfully\",\n  })\n  @ApiOperation({\n    description: \"Deletes the specified stream from the handler\",\n    summary: \"Delete a stream\",\n  })\n  @ApiParam({\n    description: \"ID of the handler containing the stream\",\n    example: \"handler-123\",\n    name: \"handlerId\",\n  })\n  @ApiParam({\n    description: \"ID of the stream to delete\",\n    example: \"stream-456\",\n    name: \"streamId\",\n  })\n  @Delete(\":streamId\")\n  public async deleteStream(\n    @Param(\"handlerId\") handlerId: string,\n    @Param(\"streamId\") streamId: string,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.streamsService.deleteStream(handlerId, userId, streamId);\n  }\n\n  @ApiForbiddenResponse({\n    description: \"User doesn't have permission to view this stream\",\n  })\n  @ApiNotFoundResponse({\n    description: \"Handler or stream not found\",\n  })\n  @ApiOkResponse({\n    description: \"Stream details retrieved successfully\",\n    schema: {\n      example: {\n        configuration: {},\n        createdAt: \"2023-01-01T00:00:00Z\",\n        handlerId: \"handler-123\",\n        id: \"stream-456\",\n        status: \"active\",\n        updatedAt: \"2023-01-01T01:00:00Z\",\n      },\n    },\n  })\n  @ApiOperation({\n    description: \"Retrieves details about the specified stream\",\n    summary: \"Get stream details\",\n  })\n  @ApiParam({\n    description: \"ID of the handler containing the stream\",\n    example: \"handler-123\",\n    name: \"handlerId\",\n  })\n  @ApiParam({\n    description: \"ID of the stream to retrieve\",\n    example: \"stream-456\",\n    name: \"streamId\",\n  })\n  @Get(\":streamId\")\n  public async readStream(\n    @Param(\"handlerId\") handlerId: string,\n    @Param(\"streamId\") streamId: string,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.streamsService.readStream(handlerId, userId, streamId);\n  }\n\n  @ApiForbiddenResponse({\n    description: \"User doesn't have permission to update this stream\",\n  })\n  @ApiNotFoundResponse({\n    description: \"Handler or stream not found\",\n  })\n  @ApiOkResponse({\n    description: \"Stream updated successfully\",\n    schema: {\n      example: {\n        id: \"stream-456\",\n        status: \"updated\",\n        updatedAt: \"2023-01-01T02:00:00Z\",\n      },\n    },\n  })\n  @ApiOperation({\n    description: \"Updates configuration of the specified stream\",\n    summary: \"Update a stream\",\n  })\n  @ApiParam({\n    description: \"ID of the handler containing the stream\",\n    example: \"handler-123\",\n    name: \"handlerId\",\n  })\n  @ApiParam({\n    description: \"ID of the stream to update\",\n    example: \"stream-456\",\n    name: \"streamId\",\n  })\n  @Put(\":streamId\")\n  public async updateStream(\n    @Param(\"handlerId\") handlerId: string,\n    @Param(\"streamId\") streamId: string,\n    @Body() changes: unknown,\n    @Req() request: Request,\n  ): Promise {\n    const userId = await this.commonService.getUserIdFromRequest(request);\n\n    if (!isString(userId)) {\n      throw new UnauthorizedException();\n    }\n\n    return this.streamsService.updateStream(\n      handlerId,\n      userId,\n      streamId,\n      changes,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StreamsModule.html":{"url":"modules/StreamsModule.html","title":"module - StreamsModule","body":"\n                   \n\n\n\n\n    Modules\n    StreamsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StreamsModule\n\n\n\ncluster_StreamsModule_exports\n\n\n\ncluster_StreamsModule_providers\n\n\n\ncluster_StreamsModule_imports\n\n\n\n\nHandlersModule\n\nHandlersModule\n\n\n\nStreamsModule\n\nStreamsModule\n\nStreamsModule -->\n\nHandlersModule->StreamsModule\n\n\n\n\n\nStreamsService \n\nStreamsService \n\nStreamsService  -->\n\nStreamsModule->StreamsService \n\n\n\n\n\nStreamsService\n\nStreamsService\n\nStreamsModule -->\n\nStreamsService->StreamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/streams/streams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StreamsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StreamsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HandlersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StreamsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { HandlersGateway } from \"../handlers/handlers.gateway\";\nimport { HandlersModule } from \"../handlers/handlers.module\";\nimport { StreamsController } from \"./streams.controller\";\nimport { StreamsService } from \"./streams.service\";\n\n@Module({\n  controllers: [StreamsController],\n  exports: [StreamsService],\n  imports: [HandlersModule],\n  providers: [StreamsService, HandlersModule, HandlersGateway],\n})\nexport class StreamsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StreamsService.html":{"url":"injectables/StreamsService.html","title":"injectable - StreamsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StreamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/streams/streams.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _emitToHandler\n                            \n                            \n                                    Public\n                                    Async\n                                createStream\n                            \n                            \n                                    Public\n                                    Async\n                                deleteStream\n                            \n                            \n                                    Public\n                                    Async\n                                readStream\n                            \n                            \n                                    Public\n                                    Async\n                                updateStream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(handlersGateway: HandlersGateway)\n                    \n                \n                        \n                            \n                                Defined in src/streams/streams.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlersGateway\n                                                  \n                                                        \n                                                                        HandlersGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _emitToHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    _emitToHandler(handlerId: string, event: string, ...data: [])\n                \n            \n\n\n                    \n                        \n                            Defined in src/streams/streams.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        []\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStream(handlerId: string, userId: string, data)\n                \n            \n\n\n                    \n                        \n                            Defined in src/streams/streams.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStream(handlerId: string, userId: string, streamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/streams/streams.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        readStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    readStream(handlerId: string, userId: string, streamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/streams/streams.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateStream\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStream(handlerId: string, userId: string, streamId: string, changes)\n                \n            \n\n\n                    \n                        \n                            Defined in src/streams/streams.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                handlerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                streamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  NotImplementedException,\n} from \"@nestjs/common\";\nimport { isObject, isString } from \"radash\";\n\nimport { HandlersGateway } from \"../handlers/handlers.gateway\";\n\n@Injectable()\nexport class StreamsService {\n  public constructor(private readonly handlersGateway: HandlersGateway) {}\n\n  public async createStream(\n    handlerId: string,\n    userId: string,\n    data: unknown,\n  ): Promise {\n    return this._emitToHandler(handlerId, \"create\", userId, data);\n  }\n\n  public async deleteStream(\n    handlerId: string,\n    userId: string,\n    streamId: string,\n  ): Promise {\n    return this._emitToHandler(handlerId, \"delete\", userId, streamId);\n  }\n\n  public async readStream(\n    handlerId: string,\n    userId: string,\n    streamId: string,\n  ): Promise {\n    return this._emitToHandler(handlerId, \"read\", userId, streamId);\n  }\n\n  public async updateStream(\n    handlerId: string,\n    userId: string,\n    streamId: string,\n    changes: unknown,\n  ): Promise {\n    return this._emitToHandler(handlerId, \"update\", userId, streamId, changes);\n  }\n\n  private async _emitToHandler(\n    handlerId: string,\n    event: string,\n    ...data: unknown[]\n  ): Promise {\n    const { server } = this.handlersGateway;\n\n    const sockets = await server.fetchSockets();\n\n    const socket = sockets.find(\n      ({ data: socketData }) => socketData.id === handlerId,\n    );\n\n    if (!socket) {\n      throw new NotFoundException(\"Handler not found\");\n    }\n\n    return new Promise((resolve, reject) => {\n      socket.emit(`stream:${event}`, ...data, (response: unknown) => {\n        if (\n          !isObject(response) ||\n          !(\"success\" in response) ||\n          typeof response.success !== \"boolean\" ||\n          (\"error\" in response && !isString(response.error))\n        ) {\n          reject(new NotImplementedException(\"Invalid response format\"));\n\n          return;\n        }\n\n        if (\"error\" in response) {\n          reject(new BadRequestException(response.error));\n\n          return;\n        }\n\n        resolve(response as T);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHandlerDto.html":{"url":"classes/UpdateHandlerDto.html","title":"class - UpdateHandlerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHandlerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/handlers/dto/update-handler.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateHandlerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\n\nimport { CreateHandlerDto } from \"./create-handler.dto\";\n\nexport class UpdateHandlerDto extends PartialType(CreateHandlerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WsAdapter.html":{"url":"classes/WsAdapter.html","title":"class - WsAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WsAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/websocket/websocket.adapter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IoAdapter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                createIOServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            \n                        createIOServer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createIOServer(port: number, options?: ServerOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websocket/websocket.adapter.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                port\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        ServerOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Server\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import type { Server, ServerOptions } from \"socket.io\";\n\nimport { IoAdapter } from \"@nestjs/platform-socket.io\";\n\nexport class WsAdapter extends IoAdapter {\n  public override createIOServer(\n    port: number,\n    options?: ServerOptions,\n  ): Server {\n    const server = super.createIOServer(port, {\n      ...options,\n      cors: {\n        methods: [\"GET\", \"POST\"],\n        origin: \"*\",\n      },\n    }) as Server;\n\n    server.use((_, next) => {\n      next(new Error(\"unauthorized\"));\n    });\n\n    return server;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/common/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/handlers/dto/create-handler.dto.ts\n            \n            class\n            CreateHandlerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/handlers/dto/update-handler.dto.ts\n            \n            class\n            UpdateHandlerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/handlers/entities/handler.entity.ts\n            \n            entity\n            Handler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/handlers/handlers.controller.ts\n            \n            controller\n            HandlersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/handlers/handlers.gateway.ts\n            \n            class\n            HandlersGateway\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/handlers/handlers.service.ts\n            \n            injectable\n            HandlersService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/handlers/interfaces/handler-socket-data.interface.ts\n            \n            interface\n            HandlerSocketData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/streams/streams.controller.ts\n            \n            controller\n            StreamsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/streams/streams.service.ts\n            \n            injectable\n            StreamsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/types/environment.ts\n            \n            interface\n            Environment\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/types/environment.ts\n            \n            interface\n            ProcessEnv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/websocket/websocket.adapter.ts\n            \n            class\n            WsAdapter\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/platform-socket.io : ^11.0.12\n        \n            @nestjs/swagger : ^11.1.0\n        \n            @nestjs/throttler : ^6.4.0\n        \n            @nestjs/typeorm : ^11.0.0\n        \n            @nestjs/websockets : ^11.0.12\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            compression : ^1.8.0\n        \n            joi : ^17.13.3\n        \n            nestjs-redoc : ^2.2.2\n        \n            radash : ^12.1.0\n        \n            randomatic : ^3.1.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.1\n        \n            ts-dedent : ^2.2.0\n        \n            typeorm : ^0.3.21\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\ncluster_HandlersModule\n\n\n\ncluster_HandlersModule_exports\n\n\n\ncluster_HandlersModule_providers\n\n\n\ncluster_StreamsModule\n\n\n\ncluster_StreamsModule_exports\n\n\n\ncluster_StreamsModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCommonService \n\nCommonService \n\nCommonService  -->\n\nCommonModule->CommonService \n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nHandlersModule\n\nHandlersModule\n\n\n\nStreamsModule\n\nStreamsModule\n\nStreamsModule -->\n\nHandlersModule->StreamsModule\n\n\n\nAppModule -->\n\nHandlersModule->AppModule\n\n\n\n\n\nHandlersService \n\nHandlersService \n\nHandlersService  -->\n\nHandlersModule->HandlersService \n\n\n\nAppModule -->\n\nStreamsModule->AppModule\n\n\n\n\n\nStreamsService \n\nStreamsService \n\nStreamsService  -->\n\nStreamsModule->StreamsService \n\n\n\n\n\nCommonService\n\nCommonService\n\nCommonModule -->\n\nCommonService->CommonModule\n\n\n\n\n\nHandlersService\n\nHandlersService\n\nHandlersModule -->\n\nHandlersService->HandlersModule\n\n\n\n\n\nStreamsService\n\nStreamsService\n\nStreamsModule -->\n\nStreamsService->StreamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nSTREAMIER SOURCE-AVAILABLE LICENSE v1.0\nEffective Date: March 31, 2025\n1. Purpose\nThis license governs the use of \"Streamier Handler Server\" (the \"Software\"), developed and owned by Streamier Inc. (the \"Licensor\"). While the source code is publicly available, this license imposes restrictions on its use, modification, and distribution to protect the rights and interests of the Licensor.\n2. Grant of License\nThe Licensor grants you (\"Licensee\") a limited, non-exclusive, non-transferable, and revocable right to view and contribute to the Software, subject to the restrictions outlined below. This license does not grant permission for any other use.\nLicensee MAY use the Software for personal, non-commercial, and internal purposes, provided such use does not compete with or harm the business interests of Streamier Inc.\n3. Restrictions\nYou MAY NOT:\n\nUse, modify, distribute, sublicense, or sell the Software or any derivative works.\nDeploy the Software in any production or commercial environment.\nUse the Software for any competitive, commercial, or revenue-generating purpose.\nRemove, obscure, or alter any copyright, trademark, or proprietary notices.\nReverse engineer, decompile, or attempt to extract the source code for any purpose other than permitted contributions.\n\n4. Contributions\n\nAny contributions made to the Software (e.g., code submissions, bug fixes, suggestions) become the exclusive property of the Licensor, including all intellectual property rights.\nContributors retain moral rights but waive any claims against Streamier Inc. regarding ownership, compensation, or credit.\nThe Licensor is under no obligation to accept, use, merge, or credit contributions.\n\n5. No Warranty & Liability\n\nThe Software is provided \"AS IS\" without any warranties, express or implied, including but not limited to warranties of merchantability, fitness for a particular purpose, or non-infringement.\nThe Licensor shall not be liable for any direct, indirect, incidental, consequential, or special damages, including but not limited to loss of data, revenue, or business opportunities arising from the use or viewing of the Software.\n\n6. Enforcement & Termination\n\nThe Licensor reserves the right to revoke, modify, or discontinue this license at any time, with or without notice.\nAny violation of this license automatically terminates your rights to access, view, or contribute to the Software.\nThe Licensor reserves the right to pursue legal action against any violations of this license.\n\n7. Governing Law\nThis License shall be governed by and interpreted under the laws of the Islamic Republic of Iran, without regard to its conflict of laws principles.\nFor commercial licensing, special permissions, or inquiries, please contact: legal@streamier.net.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandlersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StreamsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTODO\n✅ Must-Have\n\n Write unit tests for all core functionality\n Add integration tests for API endpoints\n Set up CI to run tests automatically\n Ensure minimum 90% code coverage\n\n🧪 Testing Improvements\n\n Mock external dependencies to isolate logic\n Test edge cases and failure modes\n Add performance/stress tests where relevant\n Verify all tests pass on clean install\n\n🚧 Development\n\n Include Sentry from NestJS\n Include streamier logo in redoc\n\n🧹 Cleanup\n\n Delete unused files and assets\n Address all TODO/FIXME comments in code\n Lint and format codebase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
